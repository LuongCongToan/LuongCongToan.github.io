{"version":3,"sources":["assets/scripts/Entities/Ball.ts","assets/scripts/Entities/BathClip.ts","assets/scripts/CameraController.ts","assets/scripts/Entities/Chain.ts","assets/scripts/Entities/DropLet.ts","assets/scripts/Entities/Duck.ts","assets/scripts/Entities/DynSponge.ts","assets/scripts/Entities/Entity.ts","assets/scripts/Entities/GoldenCoin.ts","assets/scripts/Entities/GreenBlock.ts","assets/scripts/Entities/Inflatable.ts","assets/scripts/InputMgr.ts","assets/scripts/LevelMgr.ts","assets/scripts/LoadingManager.ts","assets/scripts/Entities/Mine.ts","assets/scripts/Entities/Monkey.ts","assets/scripts/ParallaxLayer.ts","assets/scripts/Entities/PipeWall.ts","assets/scripts/Entities/Pipe.ts","assets/scripts/PopUpDlg.ts","assets/scripts/Entities/Rope.ts","assets/scripts/Entities/Salt.ts","assets/scripts/SharkAnimation.ts","assets/scripts/SharkController.ts","assets/scripts/Entities/SpeedFloater.ts","assets/scripts/Sphere.ts","assets/scripts/Entities/Sponge.ts","assets/scripts/TouchManager.ts","assets/scripts/TransportMessage.ts","assets/scripts/WaterColumn.ts","assets/scripts/WaterPhysic.ts","assets/scripts/WaterSurface.ts","assets/scripts/b2ShapeExternd.ts","assets/scripts/event-manager.ts","assets/scripts/sound-manager.ts"],"names":["Entity_1","require","_a","cc","_decorator","ccclass","property","Ball","_super","__extends","prototype","init","this","_mTag","EntityTag","ball","getComponent","PhysicsCollider","tag","__decorate","default","exports","BathClip","start","node","zIndex","LocalZOrder","bathClip","Component","InputMgr_1","LevelMgr_1","CameraController","_this","apply","arguments","leftTopMask","rightBottomMask","minRatio","maxRatio","mCurrentRatio","ZOOM_SPEED","camera","visibleSize","leftBound","rightBound","topBound","bottomBound","pointerPos","followX","followY","minFollowDistance","needFollow","isIntroduction","touches","kPinchZoomCoeff","CameraController_1","onLoad","Instance","canvas","find","on","Node","EventType","TOUCH_MOVE","onTouchMove","TOUCH_START","onTouchBegan","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancle","Camera","zoomRatio","view","getVisibleSize","x","y","initPosition","position","showIntroduce","startIntroduce","lateUpdate","updateZoom","followShark","updateBoundaries","isKeyPressed","GAME_KEY","ZOOM_IN","isKeyHeld","ZOOM_OUT","isSharkMoving","isSharkGrabbed","sharkNode","getCurrentShark","targetPos","parent","convertToNodeSpaceAR","convertToWorldSpaceAR","disX","Math","abs","disY","lerp","sub","mag","width","minX","maxX","leftPos","v2","rightPos","speed","moveRightAction","moveTo","moveLeft","sharkPos","move2InitPos","runAction","sequence","delayTime","callFunc","setState","LevelState","ShowInfo","height","minY","maxY","event","touchID","touch","getID","getLocation","length","Object","entries","pinchZoomWithMovedTouch","prevPos","getPreviousLocation","newPos","deltaMove","add","minDistSqr","nearestTouch","newLocation","id","_i","_b","key","value","location","distSqr","prevDistSqr","pinchDiff","sqrt","Chain","_canCut","_parent","chain","onBeginContact","contact","selfCollider","otherCollider","shark","disabled","cutTheRope","enableCut","DropLet","Gravity","Position","update","dt","Velocity","angle","misc","radiansToDegrees","atan2","rotation","removeFromParent","GetAngle","vector","sound_manager_1","DuckState","Duck","bubble","display","state","InTheAir","_isRemoving","movingSpeed","_actionEnterWater","duck","instance","playEffect","onSharkEat","sponge","Swimming","rgbody","linearVelocity","Vec2","ZERO","awake","scaleX","changeRigidBodyType","RigidBodyType","Dynamic","Falling","salt","gravityScale","disabledOnce","greenBlock","setFriction","setRestitution","onLeaveWater","stopAction","onEnterWater","EnterWater","fixedRotation","applyDamge","mine","scheduleOnce","swimmingUpdate","type","Enum","DynSponge","dynSponge","Entity","previewBody","isInPipe","unknown","reduceWaterPhysicForce","_currentRigidBodyType","RigidBody","OnPipeInTrigger","OnPipeOutTrigger","createPreviewBody","world","current_b2Body","_b2Body","bodyDef","b2","BodyDef","GetTransform","GetPosition","BodyType","b2_dynamicBody","CreateBody","shape","GetFixtureList","GetShape","fixtureDef","FixtureDef","isSensor","density","GetDensity","restitution","GetRestitution","friction","GetFriction","CreateFixture","SetGravityScale","m_gravityScale","SetLinearDamping","m_linearDamping","newType","SetAwake","GoldenCoin","OFFSET","isGoing2Shark","remainingTime","goldenCoin","coin","MoveToShark","getWorkSpacePosition","linealVelocityDirection","distance","onSharkEatMe","normalize","mul","GreenBlock","restitutionForce","frictionForce","log","Inflatable","inflatable","sensor","InputMgr","_pointerPos","defineProperty","get","systemEvent","SystemEvent","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","updateKey","keyMask","getKeyMask","keyCode","_keysPress","_keysRelease","macro","KEY","NONE","keysOld","_keysCurrent","_keysPressed","_keysReleased","isKeyReleased","onDestroy","off","SharkController_1","PopUpDlg_1","TransportMessage_1","LevelMgr","_score","_coin","_levelState","Init","MaxStep","NumDucks","lableScore","lableNewLevel","lableEndLevel","currentLevel","Step","_currentTotalDuck","_previewWorld","myShark","newSate","onShowLevelInfo","onChangedShark","SharkState","k_moving","k_grabbed","director","getPhysicsManager","enabled","createPreviewWorld","string","active","enabledAccumulator","PhysicsManager","VELOCITY_ITERATIONS","FIX_VELOCITY_ITERATIONS","POSITION_ITERATIONS","FIX_POSITION_ITERATIONS","FIXED_TIME_STEP","FIX_TIME_PHYSIC","physicsManager","physicSpeed","_world","emit","_steping","timeStep","game","config","DrawDebugData","events","_delayEvents","i","target","func","args","_syncNode","playMusic","entityType","toString","onEndLevel","Play","End","strCoin","totalCoin","Number","parseInt","send","Inst","showWinDlg","loadScene","onPauseClick","showIgmDlg","onResetClick","gravity","doSleep","World","Label","event_manager_1","LoadingMgr","lblLoading","isLoadingCompleted","_step","registerOnce","tmp","Mine","entitysCloseMe","_animation","MAX_BOMB_RANGE","isExlosing","cols","getComponents","PhysicsCircleCollider","radius","mine_radius","Animation","once","onExplode","play","e","index","indexOf","push","monkey","onEndContact","splice","Monkey","ParallaxLayer","m_camera","parallaxRatio","first_camPos","current_camPos","getPosition","dx","dy","pos","Pipe_1","PipeWall","isInvert","pipe_wall_1","entity","v","body","OnInPipe","Pipe","pipeNodes","entitiesInPipe","nodeDirs","MAX_SPEED","ForceOutScale","FORCE_OUT_PIPE_SCALE_DUCK","pipe_outside","createMoveTo","A","B","Speed","move","actionArray","Kinematic","OnEndPipe","bind","forceDir","ApplyForce","PopUpDlg","winDlg","loseDlg","igmDlg","lblWinMessage","lblWinScore","lblLoseTotalLvlCleared","lblLoseScore","lblIgmLevelInfo","lblIgmRule","Score","showLoseDlg","onIgmHomeClick","onIgmResumeClick","Chain_1","Rope","beginChainPrefab","endPositionMask","chainPrefab","NumChain","canCut","_chains","_isCutting","chainSize","round","dir","pieceSpace","createRope","numChain","preChain","instantiate","oldPos","chainComp","connectAnchor","getContentSize","RevoluteJoint","connectedAnchor","connectedBody","startChain","Prefab","Salt","mass","getMass","warter","SharkAnim","SharkAnimation","MaxStrechClips","MaxDistance","MixDistance","_currentStrectAnimId","playPipeAnim","playIdleAnim","setAnchorPoint","playStrechAnim","forceLength","_playStrectAnim","animName","SharkAnimation_1","SharkController","previewPoint","touchInput","isActive","RADIUS","MIN_DISTANCE_FORCE","MAX_DISTANCE_FORCE","m_state","k_inactive","needUpdatePreviewPoint","previewPointArray","previewPointSprite","prev_velocity","k_sharkForceFactor","OnPipeTrigger","k_idle","call","dot","previewWorld","ApplyAbsoluteForce","force","hidePreviewPath","State","touchPos","getCameraToWorldPoint","endPoint","getForce","updateDisplayAngleFollowGrabbbForce","setScale","setRotation","updateDisplayAngleFollowVelocity","velocity","scaleY","tranform","SetTransform","SetLinearVelocity","LevelMgrIns","b2WorldPos","displayPos","grabbedPosition","useWaterResistance","myPos","diff","accel","normalizeSelf","yDiff","scale","k_dead","SpeedFloater","frontDisplay","scaleForce","entityParent","speedFloater","forEach","c","speedFloaterBound","chainCol","PhysicsChainCollider","PhysicsBoxCollider","polCol","PhysicsPolygonCollider","speedFloater4ChangeZindex","speedFloaterBack","entity_1","thownAngle","throwDir","cos","sin","otherVelocity","module","force_1","SetPosition","MAX_ZINDEX","Sphere","Sponge","TouchManager","TransportMessage","_messages","_instance","to","message","content","name","deleteAfterRead","WaterColumn","targetHeight","displayNode","Height","TargetHeight","Update","dampening","tension","overlapSine","b2ShapeExternd_1","WaterSurface_1","WaterPhysic","m_bodyList","normal","offset","useDensity","ptm","size","bodyB","Splash","linearDrag","angularDrag","areac","massc","area","IsAwake","entityTag","fixture","GetNext","GetType","sc","sarea","ComputeSubmergedArea","reduceForce","shapeDensity","MIN_VALUE","buoyancyForce","SelfMul","dragForce","GetLinearVelocityFromWorldPoint","SelfSub","ApplyTorque","GetInertia","GetMass","GetAngularVelocity","WaterColumn_1","DropLet_1","WaterSurface","leftNode","rightNode","waterPrefab","dropletPrefab","Width","columns","NUM_COLUMNS","NUM_BACKGROUND_WAVES","BACKGROUND_WAVE_MAX_HEIGHT","BACKGROUND_WAVE_COMPRESSION","Tension","Dampening","Spread","sineOffsets","sineAmplitudes","sineStretches","offsetStretches","dropLets","sinoffset","PI","random","sinAmplitude","sineStretche","offsetStretche","makeWaveColumns","water","temp","offsetX","wc","overlapSines","result","otherPosition","max","min","CreateSplashParticles","tempSpeed","numDropLet","GetRandomVector2","vel","FromPolar","degreesToRadians","GetRandomFloat","dl","maxLength","magnitude","idx","lDeltas","Array","rDeltas","j","b2ShapeExternd","d","PTM_RATIO","mtp","Cricle_ComputeSubmergedArea","circle","xf","p","Mul_t_v2","m_p","l","Dot_v2_v2","m_radius","epsilon","Set","r2","l2","asin","com","pow","b2MathMulMV","u","col1","col2","b2MathMulX","T","a","R","Listenner","callback","priority","excuteOnce","EventManager","eventListenners","register","listenner","sort","b","unregister","toRemove_1","filter","val","unregisterTarget","_loop_1","toRemove","this_1","remove","dispatch","params","excuteOnce_1","SoundManager","sounds","playingSounds","initialized","enable","DEBUG_LOG","SoundManager_1","setEnable","sys","localStorage","setItem","error","loader","loadResDir","assets","urls","sound","getItem","clipName","loop","volume","toLowerCase","isPlaying","audioEngine","playRandom","clipsName","floor","random0To1","pause","undefined","resume","stop","getState","AudioState","PLAYING","pauseAll","resumeAll","stopAll"],"mappings":"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","sourcesContent":["import Entity, { EntityTag } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Ball extends Entity {\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.ball;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;       \r\n    }\r\n}\r\n","import { LocalZOrder } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BathClip extends cc.Component {\r\n\r\n    \r\n    start () {\r\n        this.node.zIndex = LocalZOrder.bathClip;\r\n    }\r\n\r\n    \r\n}\r\n","import InputMgr, { GAME_KEY } from \"./InputMgr\";\r\nimport SharkController, { SharkState } from \"./SharkController\";\r\nimport LevelMgr, { LevelState } from \"./LevelMgr\";\r\nimport SpeedFloater from \"./Entities/SpeedFloater\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CameraController extends cc.Component {\r\n\r\n    public static Instance:CameraController = null;\r\n    @property(cc.Node)\r\n    leftTopMask:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    rightBottomMask:cc.Node = null;\r\n\r\n    @property\r\n    minRatio:number = 0.2;\r\n\r\n    @property\r\n    maxRatio:number = 1.3;\r\n\r\n    mCurrentRatio = 1.0;\r\n    ZOOM_SPEED:number = 0.02;\r\n    camera:cc.Camera = null;\r\n\r\n    visibleSize:cc.Size = null;\r\n\r\n    leftBound:number = 0;\r\n    rightBound:number = 0;\r\n    topBound:number = 0;\r\n    bottomBound:number = 0;\r\n\r\n\r\n    private pointerPos:cc.Vec2 = null;\r\n\r\n\r\n    private followX:number = 390;\r\n    private followY:number = 260;\r\n    private minFollowDistance:number = 30;\r\n    private needFollow:boolean = false;\r\n\r\n    public isIntroduction = false;\r\n    private initPosition:cc.Vec2;\r\n    onLoad()\r\n    {\r\n        CameraController.Instance = this;\r\n        var canvas = cc.find('Canvas');\r\n        canvas.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        canvas.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);\r\n        canvas.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);        \r\n        canvas.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);\r\n    }\r\n    start()\r\n    {\r\n        this.camera = this.getComponent(cc.Camera);\r\n        this.mCurrentRatio = this.camera.zoomRatio;\r\n        this.visibleSize = cc.view.getVisibleSize();\r\n        this.leftBound  = this.leftTopMask.x;\r\n        this.rightBound = this.rightBottomMask.x;\r\n        this.topBound   = this.leftTopMask.y;\r\n        this.bottomBound= this.rightBottomMask.y;\r\n        this.initPosition = this.node.position;\r\n        if(LevelMgr.Instance.showIntroduce)\r\n            this.startIntroduce();\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    lateUpdate()\r\n    {\r\n        \r\n        this.updateZoom(); \r\n        this.followShark();    \r\n        this.updateBoundaries();\r\n\r\n    }\r\n\r\n    \r\n    updateZoom()\r\n    {\r\n        if(InputMgr.Instance.isKeyPressed(GAME_KEY.ZOOM_IN) || InputMgr.Instance.isKeyHeld(GAME_KEY.ZOOM_IN))\r\n        {\r\n            this.mCurrentRatio -= this.ZOOM_SPEED;\r\n            if(this.mCurrentRatio < this.minRatio)\r\n                this.mCurrentRatio = this.minRatio;\r\n        }\r\n\r\n        if(InputMgr.Instance.isKeyPressed(GAME_KEY.ZOOM_OUT) || InputMgr.Instance.isKeyHeld(GAME_KEY.ZOOM_OUT))\r\n        {\r\n            this.mCurrentRatio += this.ZOOM_SPEED;\r\n            if(this.mCurrentRatio > this.maxRatio)\r\n                this.mCurrentRatio = this.maxRatio;\r\n        }\r\n\r\n        this.camera.zoomRatio = this.mCurrentRatio;\r\n        \r\n    }\r\n    followShark()\r\n    {\r\n        \r\n        if(!LevelMgr.Instance.isSharkMoving() && !LevelMgr.Instance.isSharkGrabbed())\r\n        {\r\n           return;\r\n        }\r\n         \r\n        let sharkNode = LevelMgr.Instance.getCurrentShark().node;\r\n        let targetPos =  this.node.parent.convertToNodeSpaceAR( sharkNode.parent.convertToWorldSpaceAR(sharkNode.position));\r\n        let disX = Math.abs(targetPos.x - this.node.position.x);\r\n        let disY = Math.abs(targetPos.y - this.node.position.y);\r\n        if(disX >= this.followX || disY >= this.followY)\r\n        {\r\n            this.needFollow = true;\r\n        }\r\n        else\r\n        {\r\n        // this.needFollow = false;\r\n        }\r\n        if(this.needFollow)\r\n        {\r\n            this.node.position = this.node.position.lerp(targetPos,0.025);\r\n            if (targetPos.sub(this.node.position).mag() <= this.minFollowDistance) {\r\n                this.needFollow = false;\r\n            }\r\n        }\r\n       \r\n        \r\n    }\r\n    startIntroduce()\r\n    {\r\n\r\n        let width = (this.visibleSize.width/2) / this.camera.zoomRatio;\r\n        let minX = this.node.x - width;\r\n        let maxX = this.node.x + width;  \r\n        \r\n        let leftPos = cc.v2(this.leftBound + width, 0);\r\n        let rightPos = cc.v2(this.rightBound - width, 0);\r\n\r\n       \r\n        let speed = 800;\r\n        let moveRightAction = cc.moveTo((rightPos.x -this.node.position.x)/speed, rightPos);\r\n      \r\n        let moveLeft = cc.moveTo((rightPos.x -leftPos.x)/speed, leftPos);\r\n        \r\n        \r\n        let sharkNode = LevelMgr.Instance.getCurrentShark().node;\r\n        let sharkPos =  this.node.parent.convertToNodeSpaceAR( sharkNode.parent.convertToWorldSpaceAR(sharkNode.position));\r\n        this.node.position = sharkPos;\r\n\r\n        \r\n        let move2InitPos = cc.moveTo((this.initPosition.x - leftPos.x)/speed, this.initPosition);\r\n        //(sharkPos.x * duration)/this.rightBound\r\n        this.node.runAction(cc.sequence(\r\n\r\n            cc.delayTime(1),\r\n            moveRightAction,\r\n            moveLeft,\r\n            move2InitPos,\r\n            cc.callFunc(()=>{\r\n                this.isIntroduction = false;\r\n                LevelMgr.Instance.setState(LevelState.ShowInfo);\r\n            })\r\n\r\n        ));\r\n    }\r\n    updateBoundaries()\r\n    {\r\n        let width = (this.visibleSize.width/2) / this.camera.zoomRatio;\r\n        let height = (this.visibleSize.height/2) / this.camera.zoomRatio;\r\n\r\n        let minX = this.node.x - width;\r\n        let maxX = this.node.x + width;  \r\n        let minY = this.node.y - height;\r\n        let maxY = this.node.y + height;\r\n\r\n        \r\n        if (minX <= this.leftBound) {\r\n            this.node.x = this.leftBound + width;\r\n        }\r\n        if (minY <= this.bottomBound) {\r\n            this.node.y = this.bottomBound + height;\r\n        }\r\n        if (maxX >= this.rightBound) {\r\n           this.node.x = this.rightBound - width;\r\n        }\r\n        if (maxY >= this.topBound) {\r\n            this.node.y = this.topBound - height;\r\n            \r\n        }\r\n    }\r\n\r\n\r\n   //https://stackoverflow.com/questions/20439233/cocos2dhow-to-implement-zooming-by-pinch\r\n    //https://github.com/drakon-ag/cocos2dx-gesture-recognizers/blob/master/Classes/Gestures/PinchGestureRecognizer.cpp    \r\n    \r\n    touches:{[id:number]:cc.Vec2} = {};\r\n    onTouchBegan(event:cc.Event.EventTouch)\r\n    {\r\n        let touchID = event.touch.getID();        \r\n        this.touches[touchID] = event.getLocation();\r\n    }\r\n    onTouchEnd(event:cc.Event.EventTouch)\r\n    {\r\n        delete this.touches[event.touch.getID()];\r\n    }\r\n    onTouchCancle(event:cc.Event.EventTouch) \r\n    {\r\n        delete this.touches[event.touch.getID()];\r\n    }\r\n    onTouchMove(event:cc.Event.EventTouch) \r\n    {     \r\n        //if(SharkController.Instance.state == SharkState.k_grabbed)\r\n          //  return;\r\n\r\n        if(LevelMgr.Instance.isSharkGrabbed() || this.isIntroduction)\r\n        {\r\n            return;\r\n        }\r\n        let length = Object.entries(this.touches).length;\r\n        if(length >1)//is in multi touch\r\n        {\r\n            this.pinchZoomWithMovedTouch(event);\r\n        }\r\n        else //moving camera\r\n        {\r\n            let prevPos = event.getPreviousLocation();\r\n            let newPos = event.getLocation();\r\n            let deltaMove = prevPos.sub(newPos);\r\n            \r\n            let targetPos = this.node.position.add(deltaMove);\r\n            this.node.position = this.node.position.lerp(targetPos,0.3);\r\n           \r\n        }\r\n       //this.touchMoveDelta = this.touchBeginPos.sub(event.getLocation());\r\n    }\r\n\r\n    kPinchZoomCoeff:number = 1.0 / 10.0;\r\n    pinchZoomWithMovedTouch(event:cc.Event.EventTouch)\r\n    {\r\n        var minDistSqr = 300000;\r\n        var nearestTouch = null;\r\n        var newLocation = event.touch.getLocation();\r\n        let id = event.touch.getID();\r\n        for (let [key, value] of Object.entries(this.touches))\r\n        {\r\n            if(key != id)\r\n            {\r\n                var location = this.touches[key];\r\n                var distSqr = location.sub(newLocation).mag(); \r\n\r\n                if (distSqr < minDistSqr) {\r\n                    minDistSqr = distSqr;\r\n                    nearestTouch = location;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nearestTouch) {\r\n\r\n            var prevDistSqr = nearestTouch.sub(event.touch.getPreviousLocation()).mag();\r\n            var pinchDiff = Math.sqrt(minDistSqr) - Math.sqrt(prevDistSqr);\r\n            this.mCurrentRatio += pinchDiff * this.kPinchZoomCoeff;\r\n            if(this.mCurrentRatio < this.minRatio)\r\n                this.mCurrentRatio = this.minRatio;\r\n            if(this.mCurrentRatio > this.maxRatio)\r\n                this.mCurrentRatio = this.maxRatio;\r\n            //target.scale += pinchDiff * this.kPinchZoomCoeff;\r\n        }\r\n       \r\n    }\r\n \r\n}\r\n","import Entity, { EntityTag } from \"./Entity\";\r\nimport Rope from \"./Rope\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Chain extends Entity {\r\n\r\n    private _canCut:boolean = false;\r\n    private _parent:Rope = null;\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.chain;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;       \r\n        \r\n    }\r\n   \r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(!this._canCut)\r\n            return;\r\n\r\n        if(otherCollider.tag == EntityTag.shark)\r\n        {   \r\n           contact.disabled = true;\r\n           this._parent.cutTheRope(this.node);\r\n           \r\n        }\r\n       \r\n    }\r\n    public enableCut(parent:Rope):void\r\n    {\r\n        this._canCut = true;\r\n        this._parent = parent;\r\n        //this.rgbody.enabledContactListener = true;\r\n        //this.getComponent(cc.PhysicsCircleCollider).sensor = false; \r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DropLet extends cc.Component {\r\n\r\n    public Position:cc.Vec2;\r\n    public Velocity:cc.Vec2;\r\n    public Orientation:number; \r\n    Gravity:number = 0.2;\r\n    start()\r\n    {\r\n        this.Position = this.node.position;\r\n    }\r\n    update(dt)\r\n    {        \r\n        this.Velocity.y += this.Gravity;\r\n        this.Position = this.Position.sub(this.Velocity);\r\n        this.node.position = this.Position;\r\n        let angle = cc.misc.radiansToDegrees(Math.atan2(-this.Velocity.y, this.Velocity.x)) + 90;\r\n        this.node.rotation = angle;\r\n     \r\n        if(this.node.position.y < 110)\r\n        {\r\n            this.node.removeFromParent();\r\n        }\r\n    }\r\n\r\n    private GetAngle(vector:cc.Vec2):number\r\n    {\r\n        return Math.atan2(vector.y, vector.x);\r\n    }\r\n}\r\n","import Entity, { EntityTag } from \"./Entity\";\r\nimport LevelMgr from \"../LevelMgr\";\r\nimport SoundManager from \"../sound-manager\";\r\nimport Mine from \"./Mine\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nexport enum DuckState\r\n{\r\n    DeepInWater = 0,\r\n    InTheAir,\r\n    Falling,\r\n    EnterWater,\r\n    Swimming,\r\n}\r\n@ccclass\r\nexport default class Duck extends Entity {\r\n    \r\n    @property(cc.Node)\r\n    bubble:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    display:cc.Node = null;\r\n\r\n    @property ({type:cc.Enum(DuckState)})\r\n    state:DuckState = DuckState.InTheAir;\r\n\r\n    private _isRemoving:boolean = false;\r\n    private movingSpeed:number = 300;\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.duck;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;       \r\n    }\r\n\r\n   \r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n       \r\n    \r\n        if(otherCollider.tag == EntityTag.shark)\r\n        {        \r\n            SoundManager.instance.playEffect('sfx_duck_eaten_1');\r\n            contact.disabled = true;           \r\n            this.node.removeFromParent();\r\n            LevelMgr.Instance.onSharkEat(this._mTag);        \r\n        }\r\n        else if(otherCollider.tag == EntityTag.sponge){\r\n            if(this.state == DuckState.Swimming)\r\n            {\r\n                contact.disabled = true;\r\n                \r\n                this.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n                this.rgbody.awake = true;\r\n                \r\n                //this.getComponent(cc.PhysicsCollider).sensor = true;      \r\n                this.movingSpeed *= -1;                \r\n                if(this.movingSpeed > 0)\r\n                {\r\n                    this.display.scaleX = -1;\r\n                }\r\n                else\r\n                {\r\n                    this.display.scaleX = 1;\r\n                }\r\n               \r\n            }\r\n            else{\r\n                this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n                if(this.bubble != null)\r\n                {\r\n                    this.state = DuckState.Falling;\r\n                    this.bubble.removeFromParent();\r\n                }\r\n            }\r\n        }\r\n        else if(otherCollider.tag == EntityTag.duck){\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n            contact.disabled = true;\r\n        }\r\n        else if(otherCollider.tag == EntityTag.salt){\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n            {\r\n                this.rgbody.gravityScale = 10;\r\n                contact.disabledOnce = true;\r\n                if(this.bubble != null)\r\n                    this.bubble.removeFromParent();\r\n                    this.state = DuckState.Falling;\r\n            }\r\n        }\r\n        else if(otherCollider.tag == EntityTag.greenBlock){\r\n            {\r\n                if(this.state == DuckState.Swimming)\r\n                {\r\n                    contact.disabled = true;\r\n                    this.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n                    //this.getComponent(cc.PhysicsCollider).sensor = true;      \r\n                    this.movingSpeed *= -1;       \r\n                    if(this.movingSpeed > 0)\r\n                    {\r\n                        this.display.scaleX = -1;\r\n                    }\r\n                    else\r\n                    {\r\n                        this.display.scaleX = 1;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n                \r\n                    this.rgbody.gravityScale = 10;\r\n                    contact.disabledOnce = true;\r\n                    contact.setFriction(10);\r\n                    contact.setRestitution(0);\r\n\r\n                    if(this.bubble != null)\r\n                        this.bubble.removeFromParent();\r\n                        this.state = DuckState.Falling;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public onLeaveWater()\r\n    {\r\n        this.state = DuckState.InTheAir;\r\n        if(this._actionEnterWater != null)\r\n        {\r\n            this.node.stopAction(this._actionEnterWater);\r\n            this._actionEnterWater = null;\r\n        }\r\n    }\r\n\r\n    private _actionEnterWater:cc.Action = null;\r\n    public onEnterWater()\r\n    {        \r\n        if(this.state != DuckState.EnterWater && this.state != DuckState.Swimming)\r\n        {\r\n            this.state = DuckState.EnterWater;\r\n            if(this.bubble != null)\r\n                this.bubble.removeFromParent();\r\n            this._actionEnterWater =  cc.sequence(\r\n                cc.delayTime(2),\r\n                cc.callFunc(()=>{\r\n                    this.rgbody.fixedRotation = true;\r\n                    this.state = DuckState.Swimming;\r\n                    this.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n                }));\r\n            this.node.runAction(this._actionEnterWater);\r\n           \r\n        }\r\n    }\r\n    public applyDamge(mine:Mine)\r\n    {\r\n        if(this._isRemoving)\r\n            return;\r\n        this._isRemoving = true;\r\n        this.scheduleOnce(()=>{\r\n            LevelMgr.Instance.onSharkEat(this._mTag);  \r\n            this.node.removeFromParent();\r\n        });\r\n    }\r\n    \r\n    lateUpdate()\r\n    {\r\n        if(this.state == DuckState.Swimming )\r\n            this.swimmingUpdate();\r\n    }\r\n\r\n    \r\n    swimmingUpdate()\r\n    {\r\n        \r\n        this.rgbody.linearVelocity = cc.v2(this.movingSpeed, 0);\r\n        \r\n    }\r\n}\r\n","import Entity, { EntityTag } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DynSponge extends Entity {\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.dynSponge;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n    }\r\n\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(otherCollider.tag == EntityTag.shark || otherCollider.tag == EntityTag.sponge || otherCollider.tag == EntityTag.duck )\r\n        {        \r\n            contact.disabledOnce = true;\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n\r\n        }\r\n        \r\n    }\r\n   \r\n}\r\n","import SharkController from \"../SharkController\";\r\nimport LevelMgr from \"../LevelMgr\";\r\nimport b2ShapeExternd from \"../b2ShapeExternd\";\r\nimport Mine from \"./Mine\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport enum LocalZOrder\r\n{    \r\n    speedFloaterBack = 0,\r\n    shark,\r\n    speedFloaterFront,\r\n    duck,\r\n    coin,\r\n    piper,    \r\n    inflatable,\r\n    sponge,\r\n    greenBlock,\r\n    mine,\r\n    salt,\r\n    ball,\r\n    chain,\r\n    water,\r\n    bathClip,\r\n    \r\n}\r\nexport enum EntityTag\r\n{\r\n    shark   = 1,\r\n    warter,\r\n    duck,\r\n    pipe_outside,\r\n    pipe_wall_1,\r\n    pipe_wall_2,\r\n    inflatable,\r\n    sponge,\r\n    monkey,\r\n    dynSponge,\r\n    speedFloater,\r\n    speedFloaterBound,\r\n    speedFloater4ChangeZindex,\r\n    goldenCoin,\r\n    greenBlock,\r\n    mine,\r\n    mine_radius,\r\n    salt,\r\n    ball,\r\n    chain,\r\n    unknown,\r\n}\r\n@ccclass\r\nexport default abstract class Entity extends cc.Component {\r\n\r\n    public rgbody:cc.RigidBody = null;\r\n    public previewBody:b2.Body = null;   \r\n    public isInPipe:boolean = false;\r\n    public _mTag:EntityTag = EntityTag.unknown;\r\n    \r\n    @property\r\n    public reduceWaterPhysicForce:number = 1;//1 is not \r\n    \r\n    public abstract init();\r\n    start()\r\n    {\r\n       this.rgbody = this.getComponent(cc.RigidBody);\r\n       this._currentRigidBodyType = this.rgbody.type;\r\n       this.init();\r\n    }\r\n    \r\n\r\n    \r\n    public OnPipeInTrigger()\r\n    {\r\n        \r\n        this.isInPipe = true;\r\n    }\r\n    public OnPipeOutTrigger()\r\n    {\r\n        this.isInPipe = false;\r\n    }\r\n    public createPreviewBody(world:b2.World)\r\n    {\r\n        let current_b2Body = this.rgbody._b2Body;//.GetTransform();\r\n        let bodyDef:b2.BodyDef = new b2.BodyDef();\r\n        bodyDef.position = current_b2Body.GetTransform().GetPosition();\r\n        bodyDef.type = b2.BodyType.b2_dynamicBody;\r\n\r\n        this.previewBody = world.CreateBody(bodyDef);\r\n\r\n        let shape = current_b2Body.GetFixtureList().GetShape();\r\n        let fixtureDef = new b2.FixtureDef();\r\n        fixtureDef.isSensor    = false;\r\n        fixtureDef.shape       = shape;\r\n        fixtureDef.density     = current_b2Body.GetFixtureList().GetDensity();\r\n        fixtureDef.restitution = current_b2Body.GetFixtureList().GetRestitution();\r\n        fixtureDef.friction    = current_b2Body.GetFixtureList().GetFriction();\r\n\r\n        this.previewBody.CreateFixture(fixtureDef);\r\n        this.previewBody.SetGravityScale(current_b2Body.m_gravityScale);\r\n        this.previewBody.SetLinearDamping(current_b2Body.m_linearDamping);\r\n        \r\n    }\r\n    \r\n    private _currentRigidBodyType:cc.RigidBodyType = cc.RigidBodyType.Dynamic;\r\n    public changeRigidBodyType(newType:cc.RigidBodyType):void\r\n    {\r\n        if(this._currentRigidBodyType != newType )\r\n        {       \r\n            this._currentRigidBodyType = newType;     \r\n            this.node.runAction(cc.callFunc(()=>{\r\n                this.rgbody._b2Body.SetAwake(false);\r\n                this.rgbody.type = this._currentRigidBodyType;\r\n            }))            \r\n        }\r\n\r\n    }\r\n    public applyDamge(mine:Mine)\r\n    {\r\n\r\n    }\r\n  \r\n    public onEnterWater()\r\n    {\r\n\r\n    }\r\n    public onLeaveWater()\r\n    {\r\n        \r\n    }\r\n}\r\n","import Entity, { EntityTag, LocalZOrder } from \"./Entity\";\r\nimport LevelMgr from \"../LevelMgr\";\r\nimport SoundManager from \"../sound-manager\";\r\nimport SharkController from \"../SharkController\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GoldenCoin extends Entity {\r\n\r\n    OFFSET:number = 50;\r\n    isGoing2Shark:boolean = false;\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.goldenCoin;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;        \r\n        this.node.zIndex = LocalZOrder.coin;\r\n    }\r\n\r\n\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(otherCollider.tag == EntityTag.shark)\r\n        {   \r\n            /*this.node.removeFromParent();\r\n            LevelMgr.Instance.onSharkEat(this._mTag);     \r\n            SoundManager.instance.playEffect('sfx_coin');\r\n            */\r\n           this.isGoing2Shark = true;\r\n        }\r\n       \r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        if(this.isGoing2Shark)\r\n            this.MoveToShark(dt);\r\n    }\r\n\r\n    movingSpeed:number = 5;\r\n    remainingTime = 0.1; \r\n    MoveToShark(dt:number)\r\n    {\r\n        //let sharkPos = this.node.parent.convertToNodeSpaceAR(SharkController.Instance.getWorkSpacePosition()); \r\n        let sharkPos = this.node.parent.convertToNodeSpaceAR(LevelMgr.Instance.getCurrentShark().getWorkSpacePosition()); \r\n        let linealVelocityDirection = sharkPos.sub(this.node.position);\r\n        let distance = linealVelocityDirection.mag();\r\n        if(distance < 32 || this.remainingTime <= 0)\r\n        {\r\n            this.onSharkEatMe();\r\n        }\r\n        else{\r\n            this.remainingTime -= dt;\r\n            let newPos = this.node.position.add(linealVelocityDirection.normalize().mul(this.movingSpeed));\r\n            this.node.position = newPos;\r\n            this.movingSpeed += (2* dt);\r\n        }\r\n\r\n    }\r\n    onSharkEatMe()\r\n    {\r\n        this.node.removeFromParent();\r\n        LevelMgr.Instance.onSharkEat(this._mTag);     \r\n        SoundManager.instance.playEffect('sfx_coin');\r\n    }\r\n}\r\n","import Entity, { EntityTag, LocalZOrder } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GreenBlock extends Entity {\r\n\r\n\r\n    @property\r\n    restitutionForce:number = 0;\r\n\r\n    @property\r\n    frictionForce:number = 0.2;\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.greenBlock;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n        this.node.zIndex = LocalZOrder.greenBlock;\r\n    }\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(otherCollider.tag == EntityTag.shark)\r\n        {\r\n            contact.setRestitution(this.restitutionForce);\r\n            contact.setFriction(this.frictionForce);\r\n            cc.log(this.restitutionForce,this.frictionForce )\r\n        }\r\n    }\r\n    \r\n}\r\n","import Entity, { EntityTag, LocalZOrder } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Inflatable extends Entity {\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.inflatable;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n        this.node.zIndex = LocalZOrder.inflatable;\r\n    }\r\n    \r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        //cc.log(otherCollider.name)\r\n        if(otherCollider.tag == EntityTag.shark)\r\n        {        \r\n            contact.disabled = true;\r\n            this.getComponent(cc.PhysicsCollider).sensor = true;      \r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n\r\n            //this.node.removeFromParent();\r\n            this.node.runAction(cc.sequence( cc.delayTime(0.1),cc.callFunc(()=>{\r\n                this.node.removeFromParent();\r\n               \r\n            })));\r\n        }\r\n        else if(otherCollider.tag == EntityTag.sponge )\r\n        {\r\n            contact.disabled = true;\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n           \r\n        }\r\n        else if(otherCollider.tag == EntityTag.salt)\r\n        {\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n        }\r\n        //else\r\n        //{\r\n            //this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n        //}\r\n    }\r\n    \r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\nexport enum GAME_KEY\r\n{\r\n    NONE = (1 << 0),\r\n    UP = (1 << 1),\r\n    DOWN = (1 << 2) ,\r\n    LEFT = (1 << 3),\r\n    RIGHT= (1 << 4),\r\n    FIRE = (1 << 5),\r\n    ZOOM_IN= (1 << 6),\r\n    ZOOM_OUT= (1 << 7),\r\n}\r\n\r\n@ccclass\r\nexport default class InputMgr extends cc.Component {\r\n\r\n    public static Instance:InputMgr = null;\r\n\r\n    \r\n    protected _keysPress;\r\n\tprotected _keysRelease;\r\n\tprotected _keysPressed;\t\t\t// keys pressed this frame\r\n\tprotected _keysReleased;\t\t\t// keys released this frame\r\n    protected _keysCurrent;\r\n    \r\n    private _pointerPos:cc.Vec2 = null;\r\n\r\n    public get pointerPosition():cc.Vec2 {return this._pointerPos;}\r\n    start()\r\n    {\r\n        var canvas = cc.find('Canvas');\r\n        canvas.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);\r\n        canvas.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        canvas.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n    onLoad()\r\n    {\r\n        InputMgr.Instance = this;\r\n    }\r\n\r\n    lateUpdate()\r\n    {\r\n        this.updateKey();\r\n    }\r\n    onTouchBegan(event:cc.Event.EventTouch) \r\n    {\r\n        this._pointerPos = event.getLocation();\r\n    } \r\n    onTouchEnd(event:cc.Event.EventTouch) \r\n    {\r\n        \r\n        this._pointerPos = null;\r\n         //let endPoint:cc.Vec2 =  this.node.parent.convertToNodeSpaceAR( event.getLocation());\r\n        \r\n    }\r\n\r\n    onTouchMove(event:cc.Event.EventTouch) \r\n    {\r\n        this._pointerPos = event.getLocation();\r\n    }\r\n\r\n\r\n    onKeyDown(event) \r\n    {\r\n        var keyMask = this.getKeyMask(event.keyCode);\r\n\t\tthis._keysPress |= keyMask;\t\t\r\n        this._keysRelease &= ~keyMask;\r\n    }\r\n\r\n    onKeyUp (event) \r\n    {\r\n        this._keysRelease |= this.getKeyMask(event.keyCode);\r\n    }\r\n\r\n    getKeyMask(keyCode) : GAME_KEY\r\n    { cc.log(keyCode);\r\n        switch(keyCode)\r\n        {\r\n            \r\n            \r\n            case cc.macro.KEY[\"+\"]:           \r\n                return GAME_KEY.ZOOM_OUT;   \r\n            case cc.macro.KEY[\"-\"]:           \r\n                return GAME_KEY.ZOOM_IN;   \r\n            default: \r\n                return GAME_KEY.NONE;\r\n            \r\n        }\r\n    }\r\n\r\n    updateKey() {\r\n\r\n        var keysOld = this._keysCurrent;\r\n\t\tthis._keysCurrent &= ~this._keysRelease; // remove released keys\r\n\t\tthis._keysCurrent |= this._keysPress; // add new pressed keys\r\n\t\tthis._keysRelease &= this._keysPress;\t// keep a flag only for the new pressed keys --> delay the release\r\n\t\tthis._keysPress = 0;\r\n\t\tthis._keysPressed = this._keysCurrent & ~keysOld;\r\n        this._keysReleased = keysOld & ~this._keysCurrent;\r\n    }\r\n\r\n\r\n    public isKeyPressed(key:GAME_KEY):boolean\r\n\t{\r\n\t\treturn (this._keysPressed & key) != 0;\r\n\t}\r\n\tpublic isKeyReleased (key:GAME_KEY) : boolean\r\n\t{\r\n\t\treturn (this._keysReleased & key) != 0;\r\n\t}\r\n\tpublic isKeyHeld (key : GAME_KEY) : boolean\r\n\t{\r\n\t\treturn (this._keysCurrent & key) != 0;\r\n    }\r\n    \r\n    onDestroy () \r\n    {\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n}\r\n","import SharkController, { SharkState } from \"./SharkController\";\r\nimport { EntityTag } from \"./Entities/Entity\";\r\nimport SoundManager from \"./sound-manager\";\r\nimport PopUpDlg from \"./PopUpDlg\";\r\nimport TransportMessage from \"./TransportMessage\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\nexport enum LevelState\r\n{\r\n    Init,\r\n    ShowInfo,\r\n    Play,\r\n    Pause,\r\n    End,\r\n}\r\n\r\n@ccclass\r\nexport default class LevelMgr extends cc.Component \r\n{\r\n\r\n    public static FIX_TIME_PHYSIC = 18/1000*0.5;//see shark dask c++\r\n   // public static FIX_TIME_PHYSIC = 18/1000;//see shark dask c++\r\n    public static FIX_POSITION_ITERATIONS = 2;//see shark dask c++\r\n    public static FIX_VELOCITY_ITERATIONS = 6;//see shark dask c++\r\n    public static Instance:LevelMgr = null;\r\n    private _score:number = 0;\r\n    private _coin:number = 0;\r\n\r\n    public get Score() {return this._score};\r\n    private _levelState:LevelState = LevelState.Init;\r\n    @property\r\n    MaxStep:number = 3;\r\n\r\n    @property\r\n    NumDucks:number = 3;\r\n\r\n\r\n    @property(cc.Label)\r\n    lableScore:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lableNewLevel:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lableEndLevel:cc.Label = null;\r\n\r\n\r\n    @property\r\n    currentLevel:number = 0;\r\n\r\n\r\n    //@property([cc.Node])\r\n    //sharks:cc.Node[] = [];\r\n\r\n    @property\r\n    showIntroduce:boolean = false;\r\n    public Step:number = 0;\r\n\r\n    private _currentTotalDuck:number = 0;\r\n    private _previewWorld:b2.World = null;\r\n\r\n    public get previewWorld(){return this._previewWorld};\r\n    public get State(){return this._levelState};\r\n    private myShark:SharkController = null;\r\n    public setState(newSate:LevelState)\r\n    {\r\n        if(this._levelState ==  newSate)\r\n            return;            \r\n        this._levelState = newSate;\r\n        if(this._levelState ==  LevelState.ShowInfo)\r\n        {\r\n            this.onShowLevelInfo();\r\n        }\r\n    }\r\n\r\n    public getCurrentShark():SharkController\r\n    {\r\n        return this.myShark;\r\n        /*if(this.sharks.length == 1)\r\n        {\r\n            return this.sharks[0];\r\n        }\r\n        else{\r\n            if(this.sharks[0].getComponent(SharkController).isActive)\r\n                return this.sharks[0];\r\n            return this.sharks[1];\r\n\r\n           \r\n        }*/\r\n    }\r\n    public onChangedShark(shark:SharkController)\r\n    {\r\n        this.myShark = shark;\r\n        /*if(this.sharks.length < 2)\r\n            return;\r\n        \r\n        let s0 = this.sharks[0].getComponent(SharkController);\r\n        let s1 = this.sharks[1].getComponent(SharkController);\r\n        if(s0.id == shark.id)\r\n        {\r\n            s0.isActive = true;\r\n            s1.isActive = false;\r\n        }\r\n        else{\r\n            s0.isActive = false;\r\n            s1.isActive = true;\r\n        }\r\n        */\r\n\r\n\r\n    }\r\n    public isSharkMoving():boolean\r\n    {\r\n        return this.myShark.state == SharkState.k_moving;\r\n        /*for(let i = 0; i< this.sharks.length; i++)\r\n        {\r\n            let sharkController = this.sharks[i].getComponent(SharkController);\r\n            if(sharkController.state == SharkState.k_moving)\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n        */\r\n    }\r\n\r\n    \r\n    public isSharkGrabbed():boolean\r\n    {\r\n        return this.myShark.state == SharkState.k_grabbed;\r\n        /*for(let i = 0; i< this.sharks.length; i++)\r\n        {\r\n            let sharkController = this.sharks[i].getComponent(SharkController);\r\n            if(sharkController.state == SharkState.k_grabbed)\r\n                return true;\r\n        }\r\n        \r\n        return false;*/\r\n    }\r\n    onLoad()\r\n    {\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        LevelMgr.Instance = this;\r\n        this.createPreviewWorld();\r\n        this._currentTotalDuck = 0;        \r\n        this.lableEndLevel.string = \"Level \" + (this.currentLevel +1) + \" Clear\";\r\n        this.lableNewLevel.string =  \"Level \" + (this.currentLevel +1);\r\n        this.lableEndLevel.node.active = false;\r\n        this.lableNewLevel.node.active = false;\r\n        this._levelState = LevelState.Init;\r\n    }\r\n\r\n    start()\r\n    {\r\n        cc.director.getPhysicsManager().enabledAccumulator = !true;\r\n        //cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_jointBit | cc.PhysicsManager.DrawBits.e_shapeBit ;\r\n        //cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_jointBit;\r\n        cc.PhysicsManager.VELOCITY_ITERATIONS = LevelMgr.FIX_VELOCITY_ITERATIONS;\r\n        cc.PhysicsManager.POSITION_ITERATIONS =LevelMgr.FIX_POSITION_ITERATIONS;\r\n        cc.PhysicsManager.FIXED_TIME_STEP = LevelMgr.FIX_TIME_PHYSIC;\r\n        let physicsManager = cc.director.getPhysicsManager();\r\n        physicsManager = cc.director.getPhysicsManager();\r\n        let physicSpeed = 0.55;\r\n\r\n        //http://discuss.cocos2d-x.org/t/slow-and-fast-motion-in-physic/37461/18\r\n        physicsManager.update=()=>\r\n        {\r\n            let world = physicsManager._world\r\n            if (!world || !physicsManager.enabled) \r\n                return\r\n            physicsManager.emit('before-step')\r\n            physicsManager._steping = true\r\n            let timeStep = physicSpeed/cc.game.config['frameRate']\r\n            world.Step(timeStep, 10, 10);\r\n            world.DrawDebugData();\r\n            physicsManager._steping = false;\r\n            let events = physicsManager._delayEvents;\r\n         \r\n\r\n            for(let i  = 0; i< events.length; i++)\r\n            {\r\n                let event = events[i];\r\n                if(event)\r\n                {\r\n                    event.target[event.func].apply(event.target, event.args);\r\n                }\r\n            }\r\n            events.length = 0;\r\n            physicsManager._syncNode();\r\n        }\r\n           \r\n        \r\n        //this.onNewLevel();\r\n        if(!this.showIntroduce)\r\n        {\r\n            this.onShowLevelInfo();\r\n        }\r\n        SoundManager.instance.playMusic('m_level', true);\r\n    }\r\n\r\n    onSharkEat(entityType:EntityTag)\r\n    { \r\n        this._score += 10;\r\n        this.lableScore.string = this._score.toString();\r\n        if(entityType == EntityTag.duck)\r\n        {\r\n            this._currentTotalDuck++;\r\n        }\r\n        else  if(entityType == EntityTag.goldenCoin)\r\n        {\r\n            this._coin++;\r\n        }\r\n       \r\n        if(this._currentTotalDuck >= this.NumDucks)\r\n        {\r\n            this.onEndLevel();\r\n        }\r\n    }\r\n\r\n    onShowLevelInfo()\r\n    {\r\n\r\n        this.lableNewLevel.node.position = cc.v2(0, 480);\r\n        this.lableNewLevel.node.active = true;\r\n      \r\n        this.lableNewLevel.node.runAction(cc.sequence(cc.moveTo(0.5, cc.v2(0,0)), cc.delayTime(0.7), cc.moveTo(0.5, cc.v2(-1000,0)), cc.callFunc(()=>{\r\n            //this._levelState = LevelState.Play;\r\n            this.lableNewLevel.node.active = false;\r\n            this.setState(LevelState.Play);\r\n        })));\r\n    }\r\n    onEndLevel()\r\n    {\r\n        if(this._levelState == LevelState.End)\r\n            return;\r\n        this._levelState = LevelState.End;\r\n        /*\r\n        this.lableEndLevel.node.position = cc.v2(0, -480);\r\n        this.lableEndLevel.node.active = true;\r\n      \r\n        this.lableEndLevel.node.runAction(cc.sequence(cc.moveTo(0.5, cc.v2(0,0)), cc.delayTime(0.7), cc.moveTo(0.5, cc.v2(-1000,0)), cc.callFunc(()=>{          \r\n            //load new level\r\n           \r\n            cc.director.loadScene('lvl_' + (this.currentLevel +2));\r\n        })));\r\n        */\r\n        let strCoin = TransportMessage.instance.get('gameplay', 'totalcoin',false);\r\n        let totalCoin = strCoin == null? 0 : Number.parseInt(strCoin);\r\n        totalCoin += this._coin;\r\n        TransportMessage.instance.send('gameplay', 'totalcoin',totalCoin.toString());\r\n        this.node.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(2),\r\n                cc.callFunc(()=>{  PopUpDlg.Inst.showWinDlg()}),\r\n                cc.delayTime(2),\r\n                cc.callFunc(()=>{ cc.director.loadScene('lvl_' + (this.currentLevel +2));})\r\n            )\r\n        );\r\n       \r\n    }\r\n    onPauseClick()\r\n    {\r\n        PopUpDlg.Inst.showIgmDlg();\r\n    }\r\n    onResetClick()\r\n    {\r\n        cc.director.loadScene('lvl_' + (this.currentLevel +1));\r\n    }\r\n    createPreviewWorld()\r\n    {   \r\n        let gravity = new b2.Vec2(0.0, -10);\r\n\t    let doSleep = true; \r\n        this._previewWorld = new b2.World(gravity, doSleep);\r\n\r\n    }\r\n\r\n \r\n   \r\n}\r\n","import EventManager from \"./event-manager\";\r\nimport SoundManager from \"./sound-manager\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingMgr extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    lblLoading:cc.Label = null;\r\n\r\n    private isLoadingCompleted:boolean = false;\r\n    onLoad()\r\n    {\r\n        EventManager.instance;\r\n        SoundManager.instance;\r\n        EventManager.instance.registerOnce('Sound_initialized', ()=>{\r\n            this.isLoadingCompleted = true;\r\n            cc.director.loadScene('lvl_1');\r\n        }, this);\r\n    }\r\n    start()\r\n    {\r\n        SoundManager.instance.init();\r\n    }\r\n    _step = 0;\r\n    update(dt)\r\n    {\r\n        let tmp = this._step%3;\r\n        if(tmp == 0)\r\n            this.lblLoading.string = 'Loading .';\r\n        else if(tmp == 1)\r\n            this.lblLoading.string = 'Loading ..';\r\n        else\r\n            this.lblLoading.string = 'Loading ...';\r\n\r\n        this._step++;\r\n    }\r\n}\r\n","import Entity, { LocalZOrder, EntityTag } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Mine extends Entity {\r\n\r\n    private entitysCloseMe:cc.Node[] = [];\r\n    _animation:cc.Animation = null;\r\n    MAX_BOMB_RANGE:number = 100;\r\n    isExlosing:boolean = false;\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.mine;\r\n        //this.getComponent(cc.PhysicsCollider).tag = this._mTag;       \r\n        let cols = this.getComponents(cc.PhysicsCircleCollider);\r\n        \r\n        if(cols[0].radius < cols[1].radius)\r\n        {\r\n            cols[0].tag = EntityTag.mine;\r\n            cols[1].tag = EntityTag.mine_radius;\r\n        }\r\n        else\r\n        {\r\n            cols[1].tag = EntityTag.mine;\r\n            cols[0].tag = EntityTag.mine_radius;\r\n        }\r\n        this.node.zIndex = LocalZOrder.mine;\r\n        this._animation = this.getComponent(cc.Animation);\r\n        this._animation.once('finished', ()=>{\r\n            //this.node.removeFromParent();\r\n            this.node.runAction(cc.sequence(cc.delayTime(0.1), cc.callFunc(()=>{\r\n                this.node.removeFromParent();\r\n            })));\r\n        });\r\n        \r\n       \r\n    }\r\n    private onExplode()\r\n    {\r\n        if(!this.isExlosing)\r\n        {\r\n            this.isExlosing = true;\r\n            this.rgbody.awake = true;\r\n            this.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n            this.rgbody.gravityScale = 0;\r\n            \r\n            this._animation.play('exp');\r\n            let length =  this.entitysCloseMe.length;\r\n            for(let i = 0; i < length; i++)\r\n            {\r\n                let e = this.entitysCloseMe[i];\r\n                let distance = this.node.position.sub(e.position).mag();\r\n                if(distance < this.MAX_BOMB_RANGE)\r\n                {                \r\n                    e.getComponent(Entity).applyDamge(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(selfCollider.tag == EntityTag.mine_radius)\r\n        {\r\n            if(otherCollider.tag == EntityTag.mine_radius || \r\n                otherCollider.tag == EntityTag.salt ||\r\n                otherCollider.tag == EntityTag.duck \r\n            )\r\n            {\r\n                contact.disabled = true;                \r\n                let index=this.entitysCloseMe.indexOf(otherCollider.node);\r\n                if(index < 0)\r\n                {\r\n                    this.entitysCloseMe.push(otherCollider.node);\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        if(selfCollider.tag == EntityTag.mine)\r\n        {\r\n            if(otherCollider.tag == EntityTag.mine || otherCollider.tag == EntityTag.ball || otherCollider.tag == EntityTag.shark)\r\n            {\r\n                this.onExplode();\r\n            }else if(otherCollider.tag == EntityTag.sponge)\r\n            {\r\n                this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n                \r\n            }else if(otherCollider.tag == EntityTag.salt)\r\n            { \r\n                this.onExplode();\r\n            }\r\n            else if(otherCollider.tag == EntityTag.greenBlock ||  otherCollider.tag == EntityTag.monkey)\r\n            { \r\n                contact.disabled = true;     \r\n                this.onExplode();\r\n            }\r\n        }\r\n    }\r\n    public applyDamge(mine:Mine)\r\n    {\r\n        if(!this.isExlosing)\r\n        {\r\n           \r\n            this.onExplode();\r\n        }\r\n    }\r\n    public onEndContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(selfCollider.tag == EntityTag.mine_radius)\r\n        {\r\n            if(otherCollider.tag == EntityTag.mine_radius || \r\n                otherCollider.tag == EntityTag.salt ||\r\n                otherCollider.tag == EntityTag.shark ||\r\n                otherCollider.tag == EntityTag.mine_radius )\r\n            {\r\n                let index=this.entitysCloseMe.indexOf(otherCollider.node);\r\n                if(index >= 0)\r\n                    this.entitysCloseMe.splice(index,1);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        if(this.isExlosing)\r\n        {\r\n            this.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n        }\r\n    }\r\n}\r\n","import Entity, { LocalZOrder, EntityTag } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Monkey extends Entity {\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.monkey;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n        this.node.zIndex = LocalZOrder.sponge;\r\n    }\r\n\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(otherCollider.tag == EntityTag.shark)\r\n        {\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n        }\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ParallaxLayer extends cc.Component {\r\n\r\n    @property(cc.Camera)\r\n    m_camera:cc.Camera = null;\r\n\r\n    @property(cc.Vec2)\r\n    parallaxRatio :cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n    private first_camPos:cc.Vec2 = null;\r\n    private current_camPos:cc.Vec2 = cc.Vec2.ZERO;\r\n    start()\r\n    {\r\n        this.first_camPos = this.m_camera.node.getPosition();\r\n    }\r\n    lateUpdate()\r\n    {\r\n        this.current_camPos = this.m_camera.node.getPosition();\r\n        {\r\n            let dx = (this.current_camPos.x - this.first_camPos.x) * this.m_camera.zoomRatio;\r\n            let dy = (this.current_camPos.y - this.first_camPos.y) * this.m_camera.zoomRatio;\r\n           \r\n            let pos = this.node.getPosition();\r\n            this.node.position = new cc.Vec2(-pos.x + pos.x * this.parallaxRatio.x + dx, -pos.y + pos.y * this.parallaxRatio.y + dy);\r\n           \r\n        }\r\n    }\r\n}\r\n","import Entity, { EntityTag } from \"./Entity\";\r\nimport Pipe from \"./Pipe\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PipeWall extends Entity {\r\n\r\n   \r\n    @property\r\n    isInvert:boolean = false;\r\n\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.pipe_wall_1;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;       \r\n    }\r\n    \r\n\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(otherCollider.tag ==  EntityTag.shark || otherCollider.tag ==  EntityTag.duck || otherCollider.tag ==  EntityTag.mine)\r\n        {\r\n            let entity = otherCollider.getComponent(Entity);\r\n            //cc.log(otherCollider.body.linearVelocity);\r\n            if(!entity.isInPipe)\r\n            {\r\n                let v = otherCollider.body.linearVelocity;\r\n                if(v.x != 0 || v.y != 0)//onBeginContact trigger 2 twices because I was changed rigitbody type //entity.rgbody.type = cc.RigidBodyType.Kinematic;\r\n                {\r\n                    this.node.parent.getComponent(Pipe).OnInPipe(selfCollider, otherCollider, this.isInvert);\r\n                    //Pipe.Instance.OnInPipe(selfCollider, otherCollider, this.isInvert);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                let v = otherCollider.body.linearVelocity;\r\n                if(v.x != 0 || v.y != 0)\r\n                {\r\n                  //  entity.isInPipe = false;\r\n                  entity.OnPipeOutTrigger();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Entity, { EntityTag } from \"./Entity\";\r\nimport SharkController from \"../SharkController\";\r\nimport CameraController from \"../CameraController\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Pipe extends Entity {\r\n\r\n    //public static Instance:Pipe = null;\r\n\r\n    @property([cc.Node])\r\n    pipeNodes:cc.Node[] = [];\r\n\r\n    entitiesInPipe:cc.Node[] = [];\r\n    nodeDirs:cc.Vec2[] = [];    \r\n    \r\n    MAX_SPEED = 1000;//=> 200 pixels/s\r\n    @property\r\n    ForceOutScale:number = 7500;    \r\n\r\n    FORCE_OUT_PIPE_SCALE_DUCK = 3900;\r\n    onLoad()\r\n    {\r\n        \r\n        for(let i = 0; i< this.pipeNodes.length; i++)\r\n        {           \r\n            this.nodeDirs.push(this.node.convertToWorldSpaceAR( this.pipeNodes[i].position));\r\n        }\r\n\r\n        //Pipe.Instance = this;\r\n    }\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.pipe_outside;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;       \r\n    }\r\n\r\n\r\n    createMoveTo(A:cc.Vec2, B: cc.Vec2, Speed:number):cc.ActionInterval\r\n    {\r\n        let distance = A.sub(B).mag();\r\n        let dt = distance/Speed;\r\n        let move = cc.moveTo(dt, B);\r\n        return move;\r\n    }\r\n    public OnInPipe(selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider, isInvert:boolean)\r\n    {\r\n        let entity:Entity =otherCollider.node.getComponent(Entity);\r\n        entity.OnPipeInTrigger();\r\n        entity.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n        \r\n        let actionArray:cc.FiniteTimeAction[] = [];\r\n\r\n        \r\n        actionArray.push(\r\n            cc.callFunc(()=>{\r\n                if(entity.rgbody.type == cc.RigidBodyType.Dynamic)\r\n                {\r\n                    entity.rgbody.type = cc.RigidBodyType.Kinematic;\r\n                    entity.rgbody.gravityScale = 0;\r\n                    entity.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n                }\r\n            })\r\n        );\r\n\r\n        \r\n        {\r\n            for(let i = 0; i < this.nodeDirs.length; i++)\r\n            {\r\n                let pos = entity.node.parent.convertToNodeSpaceAR( this.nodeDirs[isInvert? (this.nodeDirs.length - i - 1):i]);            \r\n                actionArray.push(this.createMoveTo(entity.node.position, pos, this.MAX_SPEED));\r\n            }\r\n        }\r\n       \r\n\r\n\r\n        actionArray.push(cc.callFunc(this.OnEndPipe.bind(this, entity, isInvert)));\r\n        entity.node.runAction(cc.sequence(actionArray));\r\n      \r\n    }\r\n\r\n    OnEndPipe(entity:Entity, isInvert:boolean )\r\n    {\r\n        entity.rgbody.type = cc.RigidBodyType.Dynamic;\r\n        entity.rgbody.gravityScale = 10;\r\n        let forceDir:cc.Vec2;\r\n        if(isInvert)\r\n        {\r\n            forceDir = this.nodeDirs[0].sub(this.nodeDirs[1]).normalize();\r\n        }\r\n        else{\r\n            forceDir = this.nodeDirs[this.nodeDirs.length-1].sub(this.nodeDirs[this.nodeDirs.length-2]).normalize();\r\n        }\r\n\r\n        entity.rgbody.linearVelocity = cc.Vec2.ZERO;\r\n        if(entity._mTag != EntityTag.duck)\r\n            entity.rgbody._b2Body.ApplyForce(forceDir.mul(this.ForceOutScale), entity.rgbody._b2Body.GetPosition());\r\n        else\r\n       \r\n            entity.rgbody._b2Body.ApplyForce(forceDir.mul(this.FORCE_OUT_PIPE_SCALE_DUCK), entity.rgbody._b2Body.GetPosition());\r\n\r\n       \r\n    }\r\n    \r\n    \r\n    \r\n}\r\n","import LevelMgr from \"./LevelMgr\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PopUpDlg extends cc.Component {\r\n\r\n    public static Inst:PopUpDlg = null;\r\n    @property(cc.Node)\r\n    winDlg: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    loseDlg: cc.Node = null;\r\n\r\n\r\n\r\n    @property(cc.Node)\r\n    igmDlg: cc.Node = null;\r\n\r\n\r\n    @property(cc.Label)\r\n    lblWinMessage: cc.Label = null;\r\n    \r\n    @property(cc.Label)\r\n    lblWinScore: cc.Label = null;\r\n\r\n\r\n    @property(cc.Label)\r\n    lblLoseTotalLvlCleared: cc.Label = null;\r\n    \r\n    @property(cc.Label)\r\n    lblLoseScore: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lblIgmLevelInfo: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lblIgmRule: cc.Label = null;\r\n    onLoad()\r\n    {\r\n        this.winDlg.active = false;\r\n        this.loseDlg.active = false;\r\n        PopUpDlg.Inst = this;\r\n    }\r\n    start () {\r\n\r\n    }\r\n\r\n    public showWinDlg()\r\n    {\r\n        this.winDlg.active = true;\r\n        this.lblWinMessage.string = 'Level ' + (LevelMgr.Instance.currentLevel + 1) + ' cleared' ;\r\n        this.lblWinScore.string = 'Score: ' + LevelMgr.Instance.Score;\r\n    }\r\n\r\n    public showIgmDlg()\r\n    {\r\n        this.igmDlg.active = true;\r\n       \r\n    }\r\n    public showLoseDlg()\r\n    {\r\n        this.loseDlg.active = true;\r\n    }\r\n    public onIgmHomeClick()\r\n    {\r\n\r\n    }\r\n    public onIgmResumeClick()\r\n    {\r\n        this.igmDlg.active = false;\r\n    }\r\n    \r\n}\r\n","import Chain from \"./Chain\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Rope extends cc.Component {\r\n\r\n    @property(cc.Prefab)\r\n    beginChainPrefab: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    endPositionMask: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    chainPrefab: cc.Prefab = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    entity: cc.Node = null;\r\n\r\n \r\n    NumChain:number = 0;\r\n\r\n    @property\r\n    canCut:boolean = false;\r\n\r\n    private _chains:cc.Node[] = [];\r\n    private _isCutting:boolean = false;\r\n    start () {\r\n        let chainSize = 10;\r\n        let distance = this.endPositionMask.position.mag();\r\n        this.NumChain = Math.round(distance/chainSize) -1;\r\n        let dir = cc.v2(this.endPositionMask.position.x /distance, this.endPositionMask.position.y /distance);\r\n        let pieceSpace = chainSize;//distance / this.NumChain;\r\n        this.createRope(this.NumChain, dir, pieceSpace);\r\n        this.entity.zIndex = 10;\r\n    }\r\n\r\n   createRope(numChain:number, dir:cc.Vec2, pieceSpace:number)\r\n   {\r\n       //cc.log(numChain, dir, pieceSpace)\r\n       let preChain = cc.instantiate(this.beginChainPrefab);\r\n       preChain.parent = this.node;\r\n        let oldPos = preChain.position;\r\n       for(let i = 0 ; i < numChain; i++)\r\n       {\r\n           //let connectAnchor = dir.mul(pieceSpace);   \r\n           \r\n           let pos = oldPos.add(dir.mul(pieceSpace));\r\n            \r\n           let chain = cc.instantiate(this.chainPrefab);           \r\n           let chainComp =  chain.getComponent(Chain);\r\n           if(this.canCut && chainComp != null)\r\n           {\r\n               chainComp.enableCut(this);\r\n           }\r\n\r\n           //let connectAnchor = pos.sub(preChain.position); //cc.v2(0, i == 0? preChain.getContentSize().height/2:preChain.getContentSize().height);\r\n           let connectAnchor = cc.v2(0, i == 0? preChain.getContentSize().height/2:pieceSpace);\r\n           preChain.getComponent(cc.RevoluteJoint).connectedAnchor = connectAnchor;\r\n           chain.parent = this.node;\r\n           chain.position = pos;\r\n           preChain.getComponent(cc.RevoluteJoint).connectedBody = chain.getComponent(cc.RigidBody);\r\n           preChain = chain; \r\n           oldPos = oldPos.add(dir.mul(pieceSpace));\r\n           \r\n           this._chains.push(chain);\r\n           \r\n       }\r\n      \r\n       if(this.entity != null )\r\n       {\r\n            //this.entity.position = this.endPositionMask.position;\r\n            let connectAnchor = this.entity.convertToNodeSpaceAR(this.endPositionMask.parent.convertToWorldSpaceAR(this.endPositionMask.position)));\r\n            preChain.getComponent(cc.RevoluteJoint).connectedAnchor = connectAnchor ;//dir.mul(this.connectAnchor);\r\n            preChain.getComponent(cc.RevoluteJoint).connectedBody = this.entity.getComponent(cc.RigidBody);\r\n       }\r\n   }\r\n\r\n   public cutTheRope(startChain:cc.Node)\r\n   {\r\n        if(this._isCutting)\r\n            return;\r\n            this._isCutting = true;\r\n        let index = this._chains.indexOf(startChain);\r\n        if(index >= 0)\r\n        {\r\n            for(let i = this._chains.length -1; i >= index; i-- )\r\n            {\r\n                this._chains[i].removeFromParent();\r\n            }\r\n        }\r\n   }\r\n\r\n}\r\n","import Entity, { EntityTag, LocalZOrder } from \"./Entity\";\r\nimport Mine from \"./Mine\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Salt extends Entity {\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.salt;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n        this.node.zIndex = LocalZOrder.salt;\r\n    }\r\n    public applyDamge(mine:Mine)\r\n    {\r\n        let mass:number = this.rgbody.getMass();\r\n        let forceDir = mine.node.position.sub(this.node.position);\r\n        this.rgbody._b2Body.ApplyForce(forceDir.mul(2700 * mass), this.rgbody._b2Body.GetPosition());\r\n    }\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(otherCollider.tag == EntityTag.mine ||\r\n            otherCollider.tag == EntityTag.mine_radius || \r\n            otherCollider.tag == EntityTag.duck)\r\n        {\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n        }\r\n        if(otherCollider.tag == EntityTag.warter)\r\n        {\r\n            this.node.runAction(cc.callFunc(()=>{\r\n                this.node.removeFromParent();\r\n            }));\r\n        }\r\n        else if(otherCollider.tag == EntityTag.shark)\r\n        {\r\n            \r\n            contact.setRestitution(0);\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n        }\r\n    }\r\n}\r\n","import SharkController, { SharkState } from \"./SharkController\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport enum SharkAnim\r\n{\r\n    idle,\r\n    strech,\r\n}\r\n@ccclass\r\nexport default class SharkAnimation extends cc.Component {\r\n\r\n    _animation:cc.Animation = null;\r\n    const MaxStrechClips = 51;\r\n\r\n    MaxDistance = 10000;\r\n    MixDistance = 1550;\r\n\r\n    _currentStrectAnimId:number = 0;\r\n    start () {\r\n        this._animation = this.getComponent(cc.Animation);\r\n\r\n    \r\n    }\r\n    \r\n    public playPipeAnim()\r\n    {\r\n        this._animation.play('rotate_in_pipe');        \r\n    }\r\n    public playIdleAnim()\r\n    {\r\n        this._animation.play('idle');        \r\n        this.node.setAnchorPoint(0.5, 0.5);   \r\n    }\r\n\r\n    public playStrechAnim(forceLength:number)\r\n    {\r\n     \r\n        this._currentStrectAnimId = Math.round(((forceLength -this.MixDistance) * this.MaxStrechClips)/this.MaxDistance);\r\n        this._playStrectAnim(this._currentStrectAnimId);\r\n        \r\n       \r\n    }\r\n    _playStrectAnim(id:number)\r\n    {\r\n        if(id < 1)\r\n            return;\r\n        if(id > this.MaxStrechClips) \r\n            id = this.MaxStrechClips;\r\n        let animName:string = 'strech_001';\r\n        if(id < 10)\r\n            animName = 'strech_00' + id;\r\n        else\r\n            animName = 'strech_0' + id;\r\n        this._animation.play(animName);   \r\n        this.node.setAnchorPoint(0.9, 0.5); \r\n    }\r\n    /*lateUpdate()\r\n    {\r\n        if(this._currentStrectAnimId > 1 && SharkController.Instance.state == SharkState.k_moving)\r\n        {            \r\n            {               \r\n\r\n                this._currentStrectAnimId-= 2;   \r\n                if(this._currentStrectAnimId >2)\r\n                    this._playStrectAnim(this._currentStrectAnimId);   \r\n                else\r\n                {\r\n                    this._animation.play(\"idle\");   \r\n                }\r\n                         \r\n            }\r\n          \r\n        }\r\n      \r\n    }*/\r\n}\r\n","import CameraController from \"./CameraController\";\r\nimport b2ShapeExternd from \"./b2ShapeExternd\";\r\nimport Entity, { EntityTag, LocalZOrder } from \"./Entities/Entity\";\r\nimport LevelMgr, { LevelState } from \"./LevelMgr\";\r\nimport SharkAnimation, { SharkAnim } from \"./SharkAnimation\";\r\nimport PopUpDlg from \"./PopUpDlg\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nexport enum SharkState\r\n{\r\n    k_inactive = 0,\r\n    k_standing,\r\n    k_idle,\r\n    k_moving,\r\n    k_grabbed,\r\n    k_released,\r\n    k_exploded,\r\n    k_outWater,\r\n    k_stuck,\r\n    k_dead,\r\n    k_none\r\n}\r\n@ccclass\r\nexport default class SharkController extends Entity {\r\n\r\n    @property(cc.Prefab)\r\n    previewPoint:cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    display:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    touchInput:cc.Node = null;\r\n\r\n    @property\r\n    isActive:boolean = true;\r\n\r\n    @property\r\n    id:number = 0;\r\n    //if bengin touch position < RADIUS set shark state to k_grabbed\r\n    const RADIUS:number = 60;\r\n    const MIN_DISTANCE_FORCE:number = 20;\r\n    const MAX_DISTANCE_FORCE:number = 320;\r\n    \r\n    \r\n    \r\n    \r\n    m_state:SharkState =SharkState.k_inactive;\r\n\r\n    public get state():SharkState {return this.m_state;}\r\n\r\n \r\n    private needUpdatePreviewPoint:boolean = false;\r\n    private previewPointArray:cc.Vec2[] = [];\r\n    private previewPointSprite:cc.Node[] = [];\r\n\r\n    //m_previewWorld:b2.World = null;\r\n    //m_previewSharkBody:b2.Body = null;\r\n\r\n    prev_velocity:cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n    \r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.shark;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n        this.node.zIndex = LocalZOrder.shark;\r\n    }\r\n    OnPipeTrigger()\r\n    {\r\n        this.isInPipe = true;\r\n        this.display.getComponent(SharkAnimation).playPipeAnim();\r\n    }\r\n    onLoad()\r\n    {\r\n        \r\n        //let gravity = new b2.Vec2(0.0, -10);\r\n\t    //let doSleep = true; \r\n        //this.m_previewWorld = new b2.World(gravity, doSleep);\r\n        \r\n\r\n        \r\n        //this.setState(SharkState.k_idle, 0);\r\n        this.m_state = SharkState.k_idle;\r\n        \r\n        //init shark for preview paths \r\n      \r\n       \r\n        //this.sharkPreviewBody.active = false\r\n        //this._mAngle = 0;\r\n        \r\n        \r\n    }\r\n    public setState(state:SharkState, forceLength:number)\r\n    {\r\n        if(this.m_state == state)\r\n            return;\r\n        this.m_state = state;\r\n        switch(this.m_state)\r\n        {\r\n            case SharkState.k_idle:\r\n            this.display.getComponent(SharkAnimation).playIdleAnim();\r\n            break;\r\n\r\n            case SharkState.k_grabbed:\r\n            LevelMgr.Instance.onChangedShark(this);\r\n            this.display.getComponent(SharkAnimation).playStrechAnim(forceLength);\r\n            break;\r\n            case SharkState.k_moving:\r\n            this.display.getComponent(SharkAnimation).playIdleAnim();\r\n            break;\r\n            default:\r\n            this.display.getComponent(SharkAnimation).playIdleAnim();\r\n            break;\r\n        }\r\n        \r\n    }\r\n    start()\r\n    {\r\n\r\n        super.start();\r\n        if(this.isActive)\r\n            LevelMgr.Instance.onChangedShark(this);\r\n        for(let i = 0; i< 10; i++)\r\n        {\r\n            let dot:cc.Node = cc.instantiate(this.previewPoint);\r\n            dot.parent = this.node.parent;\r\n            this.previewPointSprite.push(dot);\r\n            dot.active = false;\r\n        }\r\n\r\n        //var canvas = cc.find('Canvas');\r\n        this.touchInput.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);\r\n        this.touchInput.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.touchInput.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.touchInput.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);\r\n    \r\n        this.node.runAction(cc.callFunc(()=>{\r\n            this.createPreviewBody(LevelMgr.Instance.previewWorld);\r\n        }));\r\n        \r\n\r\n    }\r\n    \r\n   \r\n    public ApplyAbsoluteForce(body:cc.RigidBody, force:cc.Vec2)\r\n    {\r\n\r\n        //body.applyLinearImpulse(force,  new cc.Vec2(0, 0), true);\r\n        body._b2Body.ApplyForce(new b2.Vec2(force.x, force.y), body._b2Body.GetTransform().GetPosition());\r\n        //body._b2Body.ApplyForceToCenter(new b2.Vec2(force.x, force.y));\r\n    }\r\n\r\n    hidePreviewPath()\r\n    {\r\n        this.previewPointArray.length = 0;\r\n        for(let i =0 ; i< this.previewPointSprite.length; i++)\r\n        {\r\n            this.previewPointSprite[i].active = false;\r\n        }\r\n    }\r\n    onTouchCancle(event:cc.Event.EventTouch) \r\n    {\r\n        this.hidePreviewPath();\r\n        //delete this.touches[event.touch.getID()];\r\n    }\r\n\r\n    \r\n\r\n    \r\n    \r\n   \r\n\r\n    onTouchBegan(event:cc.Event.EventTouch) \r\n    {\r\n        \r\n        if(LevelMgr.Instance.State != LevelState.Play)\r\n            return;\r\n            \r\n        let touchPos = this.node.convertToNodeSpaceAR( CameraController.Instance.camera.getCameraToWorldPoint( event.getLocation(), null));\r\n       \r\n        let distance = touchPos.mag();\r\n        if(distance < this.RADIUS)\r\n        {      \r\n            this.setState(SharkState.k_grabbed, 0);\r\n        }\r\n    } \r\n    onTouchEnd(event:cc.Event.EventTouch) \r\n    {\r\n        \r\n        if(LevelMgr.Instance.State != LevelState.Play)\r\n            return;\r\n        this.rgbody.active = true;\r\n        if(this.m_state == SharkState.k_grabbed)\r\n        {\r\n            let endPoint:cc.Vec2 =  this.node.parent.convertToNodeSpaceAR(CameraController.Instance.camera.getCameraToWorldPoint( event.getLocation(), null));\r\n            this.ApplyAbsoluteForce(this.rgbody, this.getForce(endPoint, false));\r\n            this.setState(SharkState.k_moving, 0);\r\n\r\n           \r\n        }\r\n\r\n        this.hidePreviewPath();\r\n    }\r\n\r\n\r\n    updateDisplayAngleFollowGrabbbForce(force:cc.Vec2)\r\n    {\r\n        let angle =  cc.misc.radiansToDegrees(force.angle(cc.v2(1,0)));\r\n        if(force.y < 0)\r\n        {\r\n            angle = 360-angle;\r\n        }\r\n        if(angle < 90)\r\n        {\r\n            this.display.setScale(1,1);\r\n        }\r\n        else if(angle < 270)\r\n        {\r\n            this.display.setScale(1,-1);\r\n        }\r\n        else{\r\n            this.display.setScale(1,1);\r\n        }\r\n        this.display.setRotation(360 - angle);\r\n    }\r\n\r\n    updateDisplayAngleFollowVelocity()\r\n    {\r\n        if(this.m_state == SharkState.k_grabbed)\r\n            return;\r\n        \r\n        let velocity = this.rgbody.linearVelocity;\r\n\r\n        //cc.log(velocity.mag())\r\n\r\n        if(Math.abs(velocity.y) < 350) //phai tinh lai cho nay\r\n      \r\n        {\r\n            //this.m_state = SharkState.k_idle;\r\n            //this.setState(SharkState.k_idle, 0);\r\n            this.display.setRotation(this.display.scaleY > 0? 0:180);\r\n        }\r\n        else\r\n        {\r\n            let angle = cc.misc.radiansToDegrees(Math.atan2(-velocity.y, velocity.x));\r\n            this.display.setRotation(angle);\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    onTouchMove(event:cc.Event.EventTouch) \r\n    {\r\n\r\n        \r\n        if(LevelMgr.Instance.State != LevelState.Play)\r\n            return;\r\n        if(this.m_state == SharkState.k_grabbed)\r\n        {\r\n            this.rgbody.active = false;\r\n            let prevPos = event.getPreviousLocation();\r\n            let newPos = event.getLocation();\r\n            let deltaMove = prevPos.sub(newPos);\r\n\r\n            let endPoint:cc.Vec2 =  this.node.parent.convertToNodeSpaceAR(CameraController.Instance.camera.getCameraToWorldPoint( event.getLocation(), null));\r\n\r\n            let tranform = this.rgbody._b2Body.GetTransform();\r\n            this.previewBody.SetTransform(tranform);\r\n            //if(deltaMove.x > 1 || deltaMove.y > 1)\r\n            {\r\n               \r\n                \r\n                \r\n                let force = this.getForce(endPoint, false);\r\n                this.updateDisplayAngleFollowGrabbbForce(force);\r\n                this.display.getComponent(SharkAnimation).playStrechAnim(force.mag());\r\n                \r\n                this.previewBody.SetAwake(false);\r\n                this.previewBody.SetLinearVelocity(new b2.Vec2(0,0));\r\n                this.previewBody.ApplyForce(new b2.Vec2(force.x, force.y), tranform.GetPosition());\r\n                this.previewPointArray.length = 0;\r\n              \r\n                for (let i = 0; i < 20; ++i)\r\n                {\r\n\r\n                    //        cc.director.getPhysicsManager().enabledAccumulator = true; //need check here in preview word\r\n                    let LevelMgrIns = LevelMgr.Instance;\r\n                    LevelMgrIns.previewWorld.Step(LevelMgr.FIX_TIME_PHYSIC, LevelMgr.FIX_VELOCITY_ITERATIONS, LevelMgr.FIX_POSITION_ITERATIONS);\r\n                    let b2WorldPos = this.previewBody.GetPosition();\r\n                    let displayPos = this.node.parent.convertToNodeSpaceAR(cc.v2(b2WorldPos.x * 32, b2WorldPos.y* 32));\r\n                    this.previewPointArray.push(displayPos);\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    k_sharkForceFactor\t\t\t= 1.8;\r\n    public getForce(grabbedPosition:cc.Vec2, useWaterResistance:boolean):cc.Vec2\r\n    {\r\n\r\n        \r\n        let mass:number = this.rgbody.getMass();\r\n        let myPos:cc.Vec2 = this.node.position;\r\n        let diff = myPos.sub(grabbedPosition).mag();\r\n        //if(diff > this.MAX_DISTANCE_FORCE)\r\n        //   diff = this.MAX_DISTANCE_FORCE;\r\n      \r\n        if(diff > 345)\r\n           diff = 345;\r\n        let accel:number = Math.sqrt(diff);\r\n\r\n        let dir = myPos.sub(grabbedPosition);\r\n        dir = dir.normalizeSelf();\r\n        cc.log(dir, diff)\r\n        //let force:cc.Vec2 = cc.v2(dir.x/diff, dir.y/diff).mul(accel * mass);\r\n        let force:cc.Vec2 = dir.mul(accel * mass * diff * this.k_sharkForceFactor);\r\n        // When pressed pos is bigger that current pos (underwater shot) increase shot force\r\n        if(grabbedPosition.y > myPos.y)\r\n        {\r\n            let yDiff = grabbedPosition.y - myPos.y;\r\n            force = force.mul(2.1);\r\n        }\r\n        return force;\r\n        \r\n    }\r\n\r\n   \r\n    lateUpdate()\r\n    {\r\n        let scale = 1.0;\r\n        for(let i = 0; i< this.previewPointArray.length; i+=2)\r\n        {\r\n            let index = i/2;\r\n            if(index < this.previewPointSprite.length)\r\n            {\r\n                \r\n                this.previewPointSprite[index].active = true;\r\n                this.previewPointSprite[index].position = (this.previewPointArray[i]);\r\n                this.previewPointSprite[index].scale = scale - i* 0.02;\r\n                \r\n            }\r\n        }\r\n        this.prev_velocity = this.rgbody.linearVelocity;\r\n        this.updateDisplayAngleFollowVelocity();\r\n        let velocity = this.rgbody.linearVelocity;\r\n        \r\n        if(this.m_state == SharkState.k_moving && velocity.mag() < 100)\r\n        {\r\n            this.setState(SharkState.k_idle, 0);\r\n        }\r\n        if(this.node.y < -300 && SharkState.k_dead != this.m_state)\r\n        {\r\n            this.setState(SharkState.k_dead, 0);\r\n            PopUpDlg.Inst.showLoseDlg();\r\n        }\r\n    }\r\n\r\n    public getWorkSpacePosition():cc.Vec2\r\n    {\r\n        return this.node.parent.convertToWorldSpaceAR(this.node.position);\r\n    }\r\n}\r\n","import Entity, { EntityTag, LocalZOrder } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SpeedFloater extends Entity {\r\n\r\n    @property(cc.Node)\r\n    frontDisplay:cc.Node = null;\r\n    \r\n    @property \r\n    scaleForce:number = 9000;\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.speedFloater;\r\n        //this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n        let cols = this.getComponents(cc.PhysicsCircleCollider);\r\n        cols.forEach(c => {\r\n            c.tag = EntityTag.speedFloaterBound;\r\n        });\r\n\r\n        let chainCol = this.getComponent(cc.PhysicsChainCollider);\r\n        if(chainCol)\r\n            chainCol.tag = this._mTag;\r\n        else\r\n        { \r\n            this.getComponent(cc.PhysicsBoxCollider).tag = this._mTag;\r\n        }\r\n        let polCol = this.getComponent(cc.PhysicsPolygonCollider);\r\n        if(polCol)\r\n            polCol.tag = EntityTag.speedFloater4ChangeZindex;\r\n        this.node.zIndex = LocalZOrder.speedFloaterBack;\r\n\r\n     \r\n    }\r\n\r\n    \r\n    entityParent:cc.Node = null;\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(selfCollider.tag == EntityTag.speedFloaterBound )\r\n        {\r\n            if(otherCollider.tag == EntityTag.sponge || otherCollider.tag == EntityTag.shark)\r\n            {                \r\n                //contact.disabledOnce = true;\r\n                this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n            }\r\n        }\r\n        if(selfCollider.tag == EntityTag.speedFloater && \r\n        (otherCollider.tag == EntityTag.shark || otherCollider.tag == EntityTag.duck))\r\n        {     \r\n            let entity =  otherCollider.node.getComponent(Entity);\r\n            let thownAngle = selfCollider.body._b2Body.GetAngle();;//Math.PI;\r\n            let throwDir = cc.v2(Math.cos(thownAngle), Math.sin(thownAngle));\r\n            let otherVelocity = otherCollider.body.linearVelocity;\r\n           \r\n            let module = otherVelocity.dot(throwDir);\r\n            let force = cc.Vec2.ZERO;\r\n            if(module != 0)\r\n            {\r\n                force = throwDir.mul(module);\r\n                force = force.normalizeSelf();\r\n                force = force.mul(otherCollider.body.getMass() * this.scaleForce) ;\r\n              \r\n            }\r\n            this.node.runAction(cc.callFunc(()=>{\r\n                //entity.rgbody._b2Body.SetTransform(selfCollider.body._b2Body.GetTransform());\r\n                otherCollider.body._b2Body.SetPosition(selfCollider.body._b2Body.GetPosition());\r\n                entity.rgbody._b2Body.SetAwake(false);\r\n                entity.rgbody._b2Body.ApplyForce(force, entity.rgbody._b2Body.GetPosition());\r\n            }))\r\n           \r\n        }\r\n        if(selfCollider.tag == EntityTag.speedFloater4ChangeZindex && otherCollider.tag == EntityTag.shark)\r\n        {\r\n           \r\n            this.entityParent = otherCollider.node.parent;\r\n            otherCollider.node.parent = this.frontDisplay.parent;\r\n            this.frontDisplay.zIndex = cc.macro.MAX_ZINDEX;\r\n            \r\n            \r\n        }\r\n      \r\n    }\r\n\r\n    public onEndContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(selfCollider.tag == EntityTag.speedFloater4ChangeZindex && otherCollider.tag == EntityTag.shark)\r\n        {\r\n            otherCollider.node.parent = this.entityParent;\r\n        }\r\n    }\r\n   \r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Sphere extends cc.Component {\r\n\r\n   \r\n    onLoad()\r\n    {\r\n\r\n    }\r\n}\r\n","import Entity, { EntityTag, LocalZOrder } from \"./Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Sponge extends Entity {\r\n\r\n    init()\r\n    {\r\n        this._mTag = EntityTag.sponge;\r\n        this.getComponent(cc.PhysicsCollider).tag = this._mTag;\r\n        this.node.zIndex = LocalZOrder.sponge;\r\n    }\r\n\r\n    public onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        \r\n       \r\n        if(otherCollider.tag == EntityTag.shark ||\r\n            otherCollider.tag == EntityTag.dynSponge || \r\n            otherCollider.tag == EntityTag.duck|| \r\n            otherCollider.tag == EntityTag.inflatable\r\n             )\r\n        {        \r\n            contact.disabledOnce = true;\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n            contact.setFriction (0);\r\n            if(otherCollider.tag == EntityTag.shark )\r\n                contact.setRestitution (0.4);\r\n            else \r\n                contact.setRestitution (0.0);\r\n        }\r\n        else if(otherCollider.tag == EntityTag.sponge)\r\n        {\r\n            contact.disabledOnce = true;\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n        }\r\n        else if(otherCollider.tag == EntityTag.greenBlock)\r\n        {\r\n            contact.disabledOnce = true;\r\n            this.changeRigidBodyType(cc.RigidBodyType.Dynamic);\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TouchManager extends cc.Component {\r\n\r\n    start()\r\n    {\r\n     //   var canvas = cc.find('Canvas');\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this);\r\n    }\r\n\r\n    onTouchCancle(event:cc.Event.EventTouch) \r\n    {\r\n        cc.log('--cancle---');\r\n    }\r\n    onTouchBegan(event:cc.Event.EventTouch) \r\n    {\r\n\r\n    }\r\n\r\n    onTouchEnd(event:cc.Event.EventTouch) \r\n    {\r\n        cc.log('--onTouchEnd---');\r\n    }\r\n\r\n    onTouchMove(event:cc.Event.EventTouch) \r\n    {\r\n\r\n    }\r\n}\r\n","// this class use as a mail box meassage to exchange message (ex: send msg with 2 scene)\r\n// if we send the same message to same people, the lastest will override the others\r\n\r\nexport default class TransportMessage {\r\n\r\n    private static _instance: TransportMessage = null;\r\n    public static get instance(): TransportMessage {\r\n        if(this._instance == null) {\r\n            this._instance = new TransportMessage();\r\n        }\r\n\r\n        return this._instance;\r\n    }\r\n\r\n    private _messages: {[key: string]: {[key: string]: string}} = {};\r\n\r\n    public send(to: string, message: string, content: string = \"\") {\r\n        if(!this._messages[to]) this._messages[to] = {};\r\n\r\n        this._messages[to][message] = content;\r\n    }\r\n\r\n    public get(name: string, message: string, deleteAfterRead: boolean = true): string|null {\r\n        if(this._messages[name] && this._messages[name][message] != null) {\r\n            return this._messages[name][message];\r\n        }   \r\n        return null;\r\n    }\r\n}","// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n/*\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n*/\r\nexport default class WaterColumn{\r\n\r\n    public TargetHeight:number;\r\n    public Height:number;\r\n    public Speed:number;\r\n\r\n    public displayNode:cc.Node = null;\r\n\r\n    constructor(height:number, targetHeight:number, speed:number)\r\n    {\r\n        this.Height = height;\r\n        this.TargetHeight =targetHeight;\r\n        this.Speed = speed;\r\n    }\r\n    public Update(dampening:number, tension:number, overlapSine:number)\r\n    {\r\n        let x = this.TargetHeight - this.Height;\r\n        this.Speed += tension * x - this.Speed * dampening;\r\n        this.Height += this.Speed;\r\n\r\n        \r\n        this.displayNode.height = this.Height + overlapSine;\r\n    }\r\n   \r\n}\r\n","import b2ShapeExternd from \"./b2ShapeExternd\";\r\nimport WaterSurface from \"./WaterSurface\";\r\nimport Entity, { EntityTag } from \"./Entities/Entity\";\r\nimport SoundManager from \"./sound-manager\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WaterPhysic extends cc.Component {\r\n\r\n   \r\n    \r\n    private m_bodyList:any = [];\r\n    private gravity:b2.Vec2 = new b2.Vec2(0, 320);\r\n    normal:b2.Vec2 = new b2.Vec2(0.0, 1.0);\r\n    offset:number = 256;\r\n    \r\n    velocity:b2.Vec2 = new b2.Vec2(0.0, 0.0);\r\n    useDensity:boolean = false;\r\n    start()\r\n    {\r\n    \r\n       this.offset = b2ShapeExternd.ptm(this.getComponent(cc.PhysicsBoxCollider).size.height + this.node.position.y ) + 3;\r\n       cc.log(this.offset);\r\n       this.gravity= cc.v2(cc.director.getPhysicsManager().gravity.x,-cc.director.getPhysicsManager().gravity.y);\r\n       this.getComponent(cc.PhysicsCollider).tag = EntityTag.warter;\r\n        //this.gravity = new b2.Vec2(0, 320);\r\n        \r\n    }\r\n    onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        if(otherCollider.tag ==  EntityTag.shark ||\r\n            otherCollider.tag ==  EntityTag.sponge ||\r\n            otherCollider.tag ==  EntityTag.dynSponge ||\r\n            otherCollider.tag ==  EntityTag.speedFloaterBound ||\r\n            otherCollider.tag ==  EntityTag.monkey ||\r\n            otherCollider.tag ==  EntityTag.greenBlock ||\r\n            otherCollider.tag ==  EntityTag.ball ||\r\n            otherCollider.tag ==  EntityTag.inflatable ||\r\n            otherCollider.tag ==  EntityTag.duck)\r\n        {\r\n            \r\n            let bodyB = otherCollider.body._b2Body;\r\n            this.m_bodyList.push(bodyB);\r\n            contact.disabled = true;\r\n\r\n        \r\n            this.getComponent(WaterSurface).Splash(otherCollider.body.node.position, /*Math.abs*/(otherCollider.body.linearVelocity.y/10));\r\n            let entity:Entity = otherCollider.node.getComponent(Entity);\r\n            entity.onEnterWater();\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    onEndContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        let bodyB= otherCollider.body._b2Body;\r\n        let index=this.m_bodyList.indexOf(bodyB);\r\n        if(index >= 0)\r\n            this.m_bodyList.splice(index,1);\r\n        contact.disabled = true;\r\n        \r\n        let entity:Entity = otherCollider.node.getComponent(Entity);\r\n        entity.onLeaveWater();\r\n    }\r\n\r\n    Step(dt):void\r\n    {\r\n        if(!this.m_bodyList || this.m_bodyList.length < 1)\r\n            return;\r\n        let density:number = 2.0;\r\n        let linearDrag:number = 7.0;\r\n        let angularDrag:number = 10.0;\r\n        let length = this.m_bodyList.length;\r\n        for(let i=0;i< length;i++)\r\n        {\r\n            let areac:b2.Vec2 = new b2.Vec2(0,0);\r\n            let massc:b2.Vec2 = new b2.Vec2(0,0);\r\n            let area:number = 0;\r\n            let mass:number = 0; \r\n            let body = this.m_bodyList[i];            \r\n            if(body.IsAwake() == false){\r\n\t\t\t\tcontinue;\r\n            }\r\n            let entityTag = body.body.node.getComponent(Entity)._mTag;\r\n            for(let fixture=body.GetFixtureList();fixture;fixture=fixture.GetNext())\r\n            {\r\n                \r\n                if(entityTag == EntityTag.speedFloater)\r\n                {\r\n                    if(fixture.GetShape().GetType() == 2 )//2 is polygon shape\r\n                        continue;\r\n                }\r\n                let sc = new b2.Vec2(0,0);\r\n                let sarea = 0;\r\n                /*\r\n                if(fixture.GetShape().GetType() == b2.Shape.e_circle)\r\n                {\r\n                    sarea = b2ShapeExternd.Cricle_ComputeSubmergedArea(fixture.GetShape(),this.normal, this.offset, body.GetTransform(), sc );\r\n                }else\r\n                {\r\n                }\r\n\r\n                */\r\n                sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\r\n               \r\n                \r\n                //sarea *= 3.0; // make area bigger to increase water power\r\n                //sarea /= 1.5;    \r\n                //if(body.body.node.getComponent(Entity)._mTag ==  EntityTag.greenBlock)\r\n                let reduceForce = body.body.node.getComponent(Entity).reduceWaterPhysicForce;\r\n                {\r\n                    sarea /= reduceForce;\r\n                }\r\n                //var sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\r\n\t\t\t\tarea += sarea;\r\n\t\t\t\tareac.x += sarea * sc.x;\r\n\t\t\t\tareac.y += sarea * sc.y;\r\n\t\t\t\tvar shapeDensity;\r\n\t\t\t\tif (this.useDensity) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tshapeDensity=fixture.GetDensity();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tshapeDensity = 1;\r\n                }\r\n                \r\n               \r\n\t\t\t\tmass += sarea*shapeDensity;\r\n\t\t\t\tmassc.x += sarea * sc.x * shapeDensity;\r\n\t\t\t\tmassc.y += sarea * sc.y * shapeDensity;\r\n            }\r\n            if(area<Number.MIN_VALUE )\r\n                continue;\r\n                \r\n            areac.x/=area;\r\n\t\t\tareac.y/=area;\r\n\t\t\tmassc.x/=mass;\r\n\t\t\tmassc.y/=mass;\r\n\t\t\t\r\n            \r\n            \r\n            if(entityTag == EntityTag.shark)\r\n            {\r\n                \r\n                density = 2;\r\n                linearDrag = 22.0;\r\n            }\r\n           let buoyancyForce:b2.Vec2 = new b2.Vec2(0, 320); \r\n            //buoyancyForce.Multiply(this.density*area )//update to 2.1\r\n            buoyancyForce.SelfMul(density*area );//update to 2.1\r\n            //buoyancyForce *= (this.density*area );\r\n            //body.ApplyForce(buoyancyForce,massc);//old\r\n            body.ApplyForce(buoyancyForce,areac);\r\n           \r\n            let dragForce:b2.Vec2 = new b2.Vec2();\r\n\t\t\tbody.GetLinearVelocityFromWorldPoint(areac, dragForce);\r\n\t\t\tdragForce = dragForce.SelfSub(this.velocity);\r\n\t\t\tdragForce = dragForce.SelfMul(-linearDrag*area);\r\n\t\t\tbody.ApplyForce(dragForce,areac);\r\n\t\t\t\r\n\t\t\t\r\n            body.ApplyTorque(-body.GetInertia()/body.GetMass()*area*body.GetAngularVelocity()*angularDrag)\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        this.Step(dt);\r\n    }\r\n    /*\r\n    private inFluid:any[] = [];\r\n    private fluidBody:any;\r\n    private gravity:any;\r\n    private density:number = 2.0;\r\n    private linearDrag:number =7.0;\r\n    private angularDrag:number =10.0;\r\n    start()\r\n    {\r\n        //cc.director.getPhysicsManager().gravity =new cc.Vec2(0, -10);\r\n        this.fluidBody = this.getComponent(cc.RigidBody)._b2Body;\r\n        \r\n        this.gravity= cc.p(cc.director.getPhysicsManager().gravity.x,-cc.director.getPhysicsManager().gravity.y);\r\n        let a = 0;\r\n\r\n        \r\n    }\r\n    onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        let bodyB = otherCollider.body._b2Body;\r\n        this.inFluid.push(bodyB);\r\n        contact.disabled = true;\r\n    }\r\n\r\n    onEndContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider): void\r\n    {\r\n        let bodyB= otherCollider.body._b2Body;\r\n        let index=this.inFluid.indexOf(bodyB);\r\n        this.inFluid.splice(index,1);\r\n        contact.disabled = true;\r\n    }\r\n\r\n    applyBuoyancy(body:any):void\r\n    {\r\n        var AC=this.findIntersectionAreaAndCentroid(body);//get the area and centroid\r\n        if(AC[0]!==0){\r\n            var mass=AC[0]*this.density;\r\n            var centroid=AC[1];\r\n            var buoyancyForce= new b2.Vec2(mass*this.gravity.x,mass*this.gravity.y);\r\n            body.ApplyForce(buoyancyForce,centroid);\r\n            var velDir=body.GetLinearVelocityFromWorldPoint(centroid).Subtract(this.fluidBody.GetLinearVelocityFromWorldPoint(centroid));\r\n            var dragMag=this.density*this.linearDrag*mass;\r\n            var dragForce=velDir.Multiply(-dragMag);\r\n            body.ApplyForce(dragForce,centroid);\r\n\r\n            var torque=-body.GetInertia()/body.GetMass()*mass*body.GetAngularVelocity()*this.angularDrag;\r\n            body.ApplyTorque(torque);\r\n        }\r\n    }\r\n\r\n    findIntersectionAreaAndCentroid(body)\r\n    {\r\n        let fixtureB = body.m_fixtureList;\r\n        let tmp = fixtureB.GetType();\r\n        if(!fixtureB ||fixtureB.GetType()!==2){\r\n            return;\r\n        }\r\n        \r\n        let centroid= cc.p(0,0);\r\n\r\n        let area:number = 0;\r\n        let mass:number = 0;\r\n        while(fixtureB)\r\n        {\r\n            let outputList=this.getVertices(this.fluidBody);\r\n            let clipPolygon=this.getVertices(body);\r\n            var cp1=clipPolygon[clipPolygon.length-1];\r\n            for (var j=0;j<clipPolygon.length;j++) {\r\n                var cp2 = clipPolygon[j];\r\n                var inputList = outputList;\r\n                outputList = [];\r\n                let s = inputList[inputList.length - 1]; //last on the input list\r\n                for (var i=0;i<inputList.length;i++) {\r\n                    var e = inputList[i];\r\n                    if (this.inside(cp1,cp2,e)) {\r\n                        if (!this.inside(cp1,cp2,s)) {\r\n                            outputList.push(this.intersection(cp1,cp2,s,e));\r\n                        }\r\n                        outputList.push(e);\r\n                    }\r\n                    else if (this.inside(cp1,cp2,s)) {\r\n                        outputList.push(this.intersection(cp1,cp2,s,e));\r\n                    }\r\n                    s = e;\r\n                }\r\n                cp1 = cp2;\r\n            }\r\n            let ac=this.computeAC(outputList);\r\n            var density=fixtureB.GetDensity();\r\n            mass+=ac[0]*density;\r\n            area+=ac[0];\r\n\r\n            //centroid.addSelf(ac[1].mul(density));\r\n            centroid.x+=ac[1].x*density;\r\n            centroid.y+=ac[1].y*density;\r\n            fixtureB=fixtureB.GetNext();\r\n        }\r\n\r\n        centroid.mulSelf(1/mass);\r\n        return [area,centroid];\r\n    }\r\n    computeAC(vs)\r\n    {\r\n        let count=vs.length;\r\n        var c = cc.p(0,0);\r\n        var area = 0.0;\r\n        var p1X = 0.0;\r\n        var p1Y = 0.0;\r\n        var inv3 = 1.0 / 3.0;\r\n        for (var i = 0; i < count; ++i) {\r\n            var p2 = vs[i];\r\n            var p3 = i + 1 < count ? vs[i + 1] : vs[0];\r\n            var e1X = p2.x - p1X;\r\n            var e1Y = p2.y - p1Y;\r\n            var e2X = p3.x - p1X;\r\n            var e2Y = p3.y - p1Y;\r\n            var D = (e1X * e2Y - e1Y * e2X);\r\n            var triangleArea = 0.5 * D;area += triangleArea;\r\n            c.x += triangleArea * inv3 * (p1X + p2.x + p3.x);\r\n            c.y += triangleArea * inv3 * (p1Y + p2.y + p3.y);\r\n        }\r\n    \r\n    \r\n        return [area,c];\r\n    }\r\n    intersection(cp1,cp2,s,e)\r\n    {\r\n        let dc = cc.p(cp1.x-cp2.x, cp1.y-cp2.y);\r\n        let dp = cc.p(s.x-e.x, s.y-e.y);\r\n        let n1 = cp1.x*cp2.y - cp1.y*cp2.x;\r\n        let n2 = s.x * e.y - s.y * e.x;\r\n        let n3 = (dc.x * dp.y - dc.y * dp.x);\r\n        return cc.p((n1*dp.x-n2*dc.x)/n3, (n1*dp.y-n2*dc.y)/n3);\r\n    }\r\n\r\n    inside(cp1,cp2,p)\r\n    {\r\n        return (cp2.x-cp1.x)*(p.y-cp1.y) > (cp2.y-cp1.y)*(p.x-cp1.x);\r\n    }\r\n    getVertices(body)\r\n    {\r\n        var shape=body.GetFixtureList().GetShape();\r\n        var vertices=[];\r\n        for(var i=0;i<shape.GetVertexCount();i++){\r\n            vertices.push(body.GetWorldPoint(shape.GetVertex(i)));\r\n        }\r\n        return vertices;\r\n    }\r\n    update(dt)\r\n    {\r\n        let length = this.inFluid.length;\r\n        for(let i=0;i< length;i++)\r\n        {\r\n            this.applyBuoyancy(this.inFluid[i]);\r\n        }\r\n    }\r\n*/\r\n}\r\n","import WaterColumn from \"./WaterColumn\";\r\nimport WaterPoint from \"./WaterPoint\";\r\nimport DropLet from \"./Entities/DropLet\";\r\nimport { LocalZOrder } from \"./Entities/Entity\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WaterSurface extends cc.Component {\r\n\r\n\r\n    //http://jsfiddle.net/phil_mcc/sXmpD/8/#run\r\n\r\n    //https://gamedevelopment.tutsplus.com/tutorials/make-a-splash-with-dynamic-2d-water-effects--gamedev-236\r\n    @property(cc.Node)\r\n    leftNode:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    rightNode:cc.Node = null;\r\n  \r\n\r\n    @property(cc.Prefab)\r\n    waterPrefab:cc.Prefab = null;\r\n    //drawNode:cc.DrawNode = null;\r\n\r\n    @property(cc.Prefab)\r\n    dropletPrefab:cc.Prefab = null;\r\n\r\n    Width:number = 0;\r\n\r\n    columns:WaterColumn[] = null;\r\n    /* //for Zen phone\r\n    NUM_COLUMNS = 100;\r\n    NUM_BACKGROUND_WAVES:number = 7;//7;\r\n    BACKGROUND_WAVE_MAX_HEIGHT:number = 6;\r\n    \r\n    */\r\n    NUM_COLUMNS = 240; //480 \r\n    NUM_BACKGROUND_WAVES:number = 3;//7;\r\n    BACKGROUND_WAVE_MAX_HEIGHT:number = 3;\r\n    BACKGROUND_WAVE_COMPRESSION:number = 1/10;\r\n\r\n    Tension:number = 0.025;\r\n    Dampening:number = 0.025;\r\n    Spread:number = 0.25;\r\n\r\n\r\n    // A phase difference to apply to each sine\r\n    offset:number = 0;\r\n    \r\n    // Amounts by which a particular sine is offset\r\n    sineOffsets:number[] = [];\r\n    // Amounts by which a particular sine is amplified\r\n    sineAmplitudes:number[] = [];\r\n\r\n    // Amounts by which a particular sine is stretched\r\n    sineStretches:number[] = [];\r\n    // Amounts by which a particular sine's offset is multiplied\r\n    offsetStretches:number[] = [];\r\n    // Set each sine's values to a reasonable random value\r\n\r\n\r\n    dropLets: cc.Node[] = [];\r\n    onLoad()\r\n    {\r\n        this.Width = this.rightNode.position.x - this.leftNode.position.x;\r\n\r\n        for(let i = 0; i< this.NUM_BACKGROUND_WAVES; i++)\r\n        {\r\n            //init sin offset\r\n            let sinoffset = -Math.PI + 2 * Math.PI * Math.random();\r\n            this.sineOffsets.push(sinoffset);\r\n\r\n            let sinAmplitude = Math.random() * this.BACKGROUND_WAVE_MAX_HEIGHT;\r\n            this.sineAmplitudes.push(sinAmplitude);\r\n\r\n            let sineStretche = Math.random() * this.BACKGROUND_WAVE_COMPRESSION;\r\n            this.sineStretches.push(sineStretche);\r\n\r\n            let offsetStretche = Math.random() * this.BACKGROUND_WAVE_COMPRESSION;\r\n            this.offsetStretches.push(offsetStretche);\r\n        }\r\n    \r\n    }\r\n    start()\r\n    {\r\n        this.columns = this.makeWaveColumns();\r\n        this.node.zIndex = LocalZOrder.water;\r\n    }\r\n    \r\n    makeWaveColumns():WaterColumn[]\r\n    {\r\n        let temp:WaterColumn[] = [];\r\n        let x = this.leftNode.position.x;\r\n        let offsetX = this.Width/this.NUM_COLUMNS;\r\n        for(let i = 0; i < this.NUM_COLUMNS; i++)\r\n        {\r\n            let wc:WaterColumn = new WaterColumn(256, 256, 0);\r\n            wc.displayNode = cc.instantiate(this.waterPrefab);\r\n            wc.displayNode.parent = this.node;\r\n            wc.displayNode.position = cc.v2(x, -128);\r\n            wc.displayNode.width = offsetX;\r\n            temp.push(wc);\r\n            x += offsetX;\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    \r\n    // This function sums together the sines generated above,\r\n    // given an input value x\r\n    overlapSines(x) \r\n    {\r\n        var result = 0;\r\n        for (var i = 0;i < this.NUM_BACKGROUND_WAVES; i++) {\r\n            result = result\r\n                + this.sineOffsets[i]\r\n                + this.sineAmplitudes[i] \r\n                * Math.sin(x * this.sineStretches[i] + this.offset * this.offsetStretches[i]);\r\n        \r\n    \r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    Splash(otherPosition: cc.Vec2, speed:number)\r\n    {\r\n        let x = otherPosition.x;//this.node.convertToWorldSpaceAR(cc.v2(objectX, 0)).x;\r\n        let index = Math.round((x - this.leftNode.x) * this.NUM_COLUMNS/ this.Width);\r\n        if(index >= this.NUM_COLUMNS)\r\n        {\r\n            index = this.NUM_COLUMNS;\r\n        }\r\n        for (let i = Math.max(0, index - 0); i < Math.min(this.NUM_COLUMNS - 1, index + 1); i++)\r\n            this.columns[index].Speed = speed;\r\n        this.CreateSplashParticles(otherPosition, speed)\r\n    }\r\n    CreateSplashParticles(otherPosition: cc.Vec2, speed)\r\n    {\r\n        \r\n       \r\n        let y = 160;\r\n        let tempSpeed = Math.abs(speed);\r\n        if(speed < -50)\r\n        {\r\n            let numDropLet = Math.round(tempSpeed / 8);\r\n            for (let i = 0; i < numDropLet; i++)\r\n            {\r\n                let pos = cc.v2(otherPosition.x, y).add(this.GetRandomVector2(40));\r\n                let vel = this.FromPolar(cc.misc.degreesToRadians(this.GetRandomFloat(-150, -30)), this.GetRandomFloat(0, 0.5 * Math.sqrt(tempSpeed)));\r\n                let dl =cc.instantiate(this.dropletPrefab);\r\n            \r\n                dl.getComponent(DropLet).Velocity = vel;\r\n                dl.parent = this.node;\r\n                dl.position = pos;\r\n            }\r\n        }\r\n    }\r\n\r\n    private GetAngle(vector:cc.Vec2):number\r\n    {\r\n        return Math.atan2(-vector.y, vector.x);\r\n    }\r\n    private GetRandomVector2(maxLength:number):cc.Vec2\r\n    {\r\n        return this.FromPolar(this.GetRandomFloat(-Math.PI, Math.PI), this.GetRandomFloat(0, maxLength));\r\n    }\r\n    private FromPolar(angle:number, magnitude:number):cc.Vec2\r\n    {\r\n        let v2 = cc.v2(Math.cos(angle),Math.sin(angle));\r\n        return v2.mul(magnitude);\r\n    }\r\n\r\n    private GetRandomFloat(min:number,max:number):number\r\n    {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    update(dt)\r\n    {\r\n\r\n        this.offset = this.offset + 1;\r\n\r\n        for(let idx = 0; idx < this.NUM_COLUMNS; idx++ )\r\n        {\r\n            this.columns[idx].Update(this.Dampening, this.Tension, this.overlapSines(idx));\r\n        }\r\n\r\n      \r\n        let lDeltas:number[] = new Array(this.NUM_COLUMNS);\r\n        let rDeltas:number[] = new Array(this.NUM_COLUMNS);\r\n        \r\n        // do some passes where columns pull on their neighbours\r\n        for (let j = 0; j < 8; j++)\r\n        {\r\n            for (let i = 0; i < this.NUM_COLUMNS; i++)\r\n            {\r\n                if (i > 0)\r\n                {\r\n                    lDeltas[i] = this.Spread * (this.columns[i].Height - this.columns[i - 1].Height);\r\n                    this.columns[i - 1].Speed += lDeltas[i];\r\n                }\r\n                if (i < this.NUM_COLUMNS - 1)\r\n                {\r\n                    rDeltas[i] = this.Spread * (this.columns[i].Height - this.columns[i + 1].Height);\r\n                    this.columns[i + 1].Speed += rDeltas[i];\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.NUM_COLUMNS; i++)\r\n            {\r\n                if (i > 0)\r\n                    this.columns[i - 1].Height += lDeltas[i];\r\n                if (i < this.NUM_COLUMNS - 1)\r\n                    this.columns[i + 1].Height += rDeltas[i];\r\n            }\r\n        }\r\n    }\r\n   \r\n}\r\n","// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class b2ShapeExternd {\r\n\r\n    static PTM_RATIO:number = 32.0;\r\n    public static ptm(d:number):number\r\n    {\r\n        return d / this.PTM_RATIO;\r\n    }\r\n\r\n    public static mtp(d:number):number\r\n    {\r\n        return d * this.PTM_RATIO;\r\n    }\r\n\r\n    static b2MathMulMV = function (A, v) {\r\n\t\t\r\n\t\t\r\n\t\tvar u = new b2.Vec2(A.col1.x * v.x + A.col2.x * v.y, A.col1.y * v.x + A.col2.y * v.y);\r\n\t\treturn u;\r\n\t}\r\n\r\n    static b2MathMulX = function (T, v) {\r\n\t\tvar a = b2ShapeExternd.b2MathMulMV(T.R, v);\r\n\t\ta.x += T.position.x;\r\n\t\ta.y += T.position.y;\r\n\t\t\r\n\t\treturn a;\r\n\t}\r\n    public static Cricle_ComputeSubmergedArea(circle:b2.CircleShape, normal: b2.Vec2, offset:Number, xf:b2.Transform, c:b2.Vec2):number\r\n    {\r\n        let p:b2.Vec2 = b2.Mul_t_v2(xf,circle.m_p);\r\n        let l:number = -(b2.Dot_v2_v2(normal,p) - offset);\r\n        \r\n        if(l<-circle.m_radius+ b2.epsilon){\r\n            //Completely dry\r\n            return 0;\r\n        }\r\n        if(l>circle.m_radius){\r\n            //Completely wet\r\n            //c = p;\r\n            c.Set(p.x, p.y);\r\n            return Math.PI*circle.m_radius*circle.m_radius;\r\n        }\r\n        \r\n        //Magic\r\n        let r2:number = circle.m_radius*circle.m_radius;\r\n        let l2:number = l*l;\r\n        let area:number = r2 * (Math.asin(l/circle.m_radius) + Math.PI/2) + l * Math.sqrt(r2 - l2);\r\n        let com:number = -2.0/3.0*Math.pow(r2-l2,1.5)/area;\r\n        \r\n        c.x = p.x + normal.x * com;\r\n        c.y = p.y + normal.y * com;\r\n        \r\n        return area;\r\n\r\n    }\r\n}\r\n","// this class use for manage own event sending between game object\r\n// why we do not use cocos event manager like emit, dispatchevent\r\n//      - emit: it only work on the same node\r\n//      - dispatch event: it only work buble (we not send cross object)\r\n\r\nclass Listenner {\r\n    target: cc.Node = null;\r\n    callback: Function = null;\r\n    priority: number = 0;\r\n    excuteOnce: boolean = false;\r\n}\r\n\r\nexport default class EventManager {\r\n\r\n    private static _instance: EventManager = null;\r\n    static get instance() {\r\n        if(EventManager._instance == null)\r\n            EventManager._instance = new EventManager();\r\n\r\n        return EventManager._instance;\r\n    }\r\n\r\n    private eventListenners: {[key: string]: Listenner[]} = {};\r\n\r\n    register(event: string, callback: Function, target: any = null, priority: number = 0, excuteOnce: boolean = false): Function {\r\n        let listenner = {target: target, callback: callback, priority: priority, excuteOnce: excuteOnce};\r\n        if(this.eventListenners[event]) {   // already have evnt type -> push back it in list listenner\r\n            this.eventListenners[event].push(listenner);\r\n        } else { // if not create list\r\n            this.eventListenners[event] = [];\r\n            this.eventListenners[event].push(listenner);\r\n        }\r\n        // sort base on prirority\r\n        this.eventListenners[event].sort((a, b) => {\r\n            return b.priority - a.priority;         // bigger priority -> most front of array\r\n        });\r\n\r\n        return callback;    // return callback to easy store it, and use in unregister function\r\n    }\r\n\r\n    registerOnce(event: string, callback: Function, target: any = null, priority: number = 0) {\r\n        this.register(event, callback, target, priority, true);\r\n    }\r\n\r\n    unregister(event: string, callback: Function, target: any = null) {\r\n        if(this.eventListenners[event]) {\r\n            let toRemove: number[] = [];\r\n            for(let i = 0; i < this.eventListenners[event].length; i++) {\r\n                let listenner = this.eventListenners[event][i];\r\n                if(callback == null) {  // remove for all listenner on node target\r\n                    if(listenner.target == target)\r\n                        toRemove.push(i);\r\n                }  else {\r\n                    if(listenner.target == target && listenner.callback == callback)\r\n                        toRemove.push(i);\r\n                }                \r\n            }\r\n            this.eventListenners[event] = this.eventListenners[event].filter((val, id) => {\r\n                return toRemove.indexOf(id) === -1;\r\n            });\r\n            // remove if event has empty\r\n            if(this.eventListenners[event].length == 0) {\r\n                delete this.eventListenners[event];\r\n            }\r\n        }\r\n    }\r\n\r\n    // unregister all listenner for target\r\n    unregisterTarget(target: any) {\r\n        for(let event in this.eventListenners) {\r\n            let toRemove: number[] = [];\r\n            for(let i = 0; i < this.eventListenners[event].length; i++) {\r\n                let listenner = this.eventListenners[event][i];\r\n                if(listenner.target == target)\r\n                    toRemove.push(i);\r\n            }\r\n            this.eventListenners[event] = this.eventListenners[event].filter((val, id) => {\r\n                return toRemove.indexOf(id) === -1;\r\n            });\r\n            // remove if event has empty\r\n            if(this.eventListenners[event].length == 0) {\r\n                delete this.eventListenners[event];\r\n            }\r\n        }\r\n    }\r\n\r\n    // remove all listener for event\r\n    remove(event: string) {\r\n        if(this.eventListenners[event]) {\r\n            delete this.eventListenners[event];\r\n        }\r\n    }\r\n\r\n    dispatch(event: string, ...params: any[]) {\r\n        if(this.eventListenners[event]) {\r\n            let excuteOnce: Listenner[] = [];\r\n            this.eventListenners[event].forEach(listenner => {\r\n                if(listenner.target) {\r\n                    listenner.callback.call(listenner.target, params[0], params[1], params[2], params[3], params[4], params[5], params[6], params[7], params[8], params[9]);\r\n                } else {\r\n                    listenner.callback(params[0], params[1], params[2], params[3], params[4], params[5], params[6], params[7], params[8], params[9]);\r\n                }\r\n                if(listenner.excuteOnce == true) {\r\n                    excuteOnce.push(listenner);\r\n                }\r\n            });\r\n\r\n            excuteOnce.forEach(listenner => {\r\n                this.unregister(event, listenner.callback, listenner.target);\r\n            });\r\n        }\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nimport EventManager from './event-manager'\r\n\r\n@ccclass\r\nexport default class SoundManager {\r\n\r\n    private sounds: {[key: string]: cc.AudioClip} = {};\r\n    private playingSounds: {[key: string]: number} = {}\r\n\r\n    private static _instance: SoundManager = null;\r\n\r\n    private initialized: boolean = false;\r\n    private enable: boolean = true;\r\n    private DEBUG_LOG = true;\r\n\r\n    static get instance() {\r\n        if(SoundManager._instance == null) {\r\n            SoundManager._instance = new SoundManager();\r\n        }\r\n        return SoundManager._instance;\r\n    }\r\n\r\n    setEnable(enable: boolean) {\r\n        cc.sys.localStorage.setItem(\"Sound_enable\", enable ? 1 : 0);\r\n    }\r\n\r\n    log(message) {\r\n        if(this.DEBUG_LOG) {\r\n            cc.log(message);\r\n        }\r\n    }\r\n\r\n    error(message) {\r\n        if(this.DEBUG_LOG) {\r\n            cc.error(message);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        // load from resource\r\n        cc.loader.loadResDir('sounds', (error, assets, urls) => {\r\n            if(urls.length > 0) { // IOS throw exception for ogg. Remove this, iOS only load m4a, mp4 and mp3\r\n                assets.forEach((sound, index) => {\r\n                    if(urls[index].indexOf('sounds') != -1/* || urls[index].indexOf('sounds/effect') != -1*/) {\r\n                        //                 // let key = sound.substring(sound.lastIndexOf('/') + 1, sound.lastIndexOf('.')).toLowerCase();\r\n                                         this.sounds[sound.name] = sound;\r\n                    }                    \r\n                });\r\n                this.initialized = true;\r\n                this.enable = cc.sys.localStorage.getItem(\"Sound_enable\") ? parseInt(cc.sys.localStorage.getItem(\"Sound_enable\")) == 1 : true;\r\n                cc.log(\"sound init\");\r\n                EventManager.instance.dispatch(\"Sound_initialized\");\r\n            }\r\n        });\r\n    }\r\n\r\n    playMusic(clipName: string, loop: boolean = true, volume: number = 1) {\r\n        if(!this.enable || !this.initialized) return;\r\n\r\n        clipName = clipName.toLowerCase();\r\n\r\n        if(this.isPlaying(clipName)) {\r\n            this.log(\"clipName: \" + clipName + \" already played\")\r\n            return;\r\n        }\r\n        if(this.sounds[clipName]) {\r\n            this.log('play music: '  + clipName);\r\n            let id = cc.audioEngine.play(this.sounds[clipName], loop, volume);\r\n            this.playingSounds[clipName] = id;\r\n        }\r\n        else {\r\n            this.error(\"playMusic - clipName: \" + clipName + \" not found\");\r\n        }\r\n    }\r\n\r\n    playEffect(clipName: string, loop: boolean = false, volume: number = 1) {\r\n        if(!this.enable || !this.initialized) return;\r\n\r\n        clipName = clipName.toLowerCase();\r\n        if(this.sounds[clipName]) {\r\n            this.log('play effect: '  + clipName);\r\n            let id = cc.audioEngine.play(this.sounds[clipName], loop, volume);\r\n            this.playingSounds[clipName] = id;\r\n        }\r\n        else {\r\n            this.error(\"playEffect - clipName: \" + clipName + \" not found\");\r\n        }\r\n    }\r\n\r\n    playRandom(clipsName: string[], loop: boolean = false, volume: number = 1) {\r\n        if(!this.enable || !this.initialized) return;\r\n\r\n        let idx = Math.floor(cc.random0To1()*clipsName.length);\r\n        let clipName = clipsName[idx].toLowerCase();\r\n        if(this.sounds[clipName]) {\r\n            this.log('play random: '  + clipName);\r\n            let id = cc.audioEngine.play(this.sounds[clipName], loop, volume);\r\n            this.playingSounds[clipName] = id;\r\n        }\r\n        else {\r\n            this.error(\"playRandom - clipName: \" + clipsName[idx] + \" not found\");\r\n        }\r\n    }\r\n\r\n    pause(clipName: string) {\r\n        if(!this.enable) return;\r\n\r\n        clipName = clipName.toLowerCase();\r\n        if(this.playingSounds[clipName] != undefined) {\r\n            cc.audioEngine.pause(this.playingSounds[clipName]);\r\n        } else {\r\n            this.error(\"Pause sound: \" + clipName + \" is not in playing list\");\r\n        }\r\n    }\r\n\r\n    resume(clipName: string) {\r\n        if(!this.enable) return;\r\n\r\n        clipName = clipName.toLowerCase();\r\n        if(this.playingSounds[clipName] != undefined) {\r\n            cc.audioEngine.resume(this.playingSounds[clipName]);\r\n        } else {\r\n            this.error(\"Resume sound: \" + clipName + \" is not in playing list\");\r\n        }\r\n    }\r\n\r\n    stop(clipName: string) {\r\n        if(!this.enable) return;\r\n\r\n        this.log(\"stop sound: \" + clipName);\r\n        clipName = clipName.toLowerCase();\r\n        if(this.playingSounds[clipName] != undefined) {\r\n            cc.audioEngine.stop(this.playingSounds[clipName]);\r\n            delete this.playingSounds[clipName];\r\n        } else {\r\n            this.error(\"Stop sound: \" + clipName + \" is not in playing list\");\r\n        }\r\n    }\r\n\r\n    isPlaying(clipName: string): boolean {\r\n        clipName = clipName.toLowerCase();\r\n        if(this.playingSounds[clipName] != undefined) {\r\n            let state = cc.audioEngine.getState(this.playingSounds[clipName]);\r\n            return state == cc.audioEngine.AudioState.PLAYING;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    pauseAll() {\r\n        cc.audioEngine.pauseAll();\r\n    }\r\n\r\n    resumeAll() {\r\n        if(!this.enable) return;\r\n\r\n        cc.audioEngine.resumeAll();\r\n    }\r\n\r\n    stopAll() {\r\n         if(!this.enable) return;\r\n\r\n        cc.audioEngine.stopAll();\r\n    }\r\n}\r\n"],"sourceRoot":"/source/","file":"project.dev.js"}